<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>console.log 带时间输出</title>
      <link href="/2021/11/25/console-log-dai-shi-jian-shu-chu/"/>
      <url>/2021/11/25/console-log-dai-shi-jian-shu-chu/</url>
      
        <content type="html"><![CDATA[<p>适用于 <code>nodejs</code> 环境, 浏览器可以直接设置显示时间</p><pre class="line-numbers language-js"><code class="language-js"><span class="token punctuation">{</span>  <span class="token keyword">const</span> newLog <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    arguments<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>oLog<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> newError <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    arguments<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>oError<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  newLog<span class="token punctuation">.</span>oLog <span class="token operator">=</span> console<span class="token punctuation">.</span>log<span class="token punctuation">;</span>  newError<span class="token punctuation">.</span>oError <span class="token operator">=</span> console<span class="token punctuation">.</span>error<span class="token punctuation">;</span>  console<span class="token punctuation">.</span>log <span class="token operator">=</span> newLog<span class="token punctuation">;</span>  console<span class="token punctuation">.</span>error <span class="token operator">=</span> newError<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样, <code>console.log</code> 和 <code>console.error</code> 输出就可以附带时间了</p><pre><code>2021/11/25 下午3:01:55hello</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用VSCode编辑有道云笔记md</title>
      <link href="/2021/11/25/shi-yong-vscode-bian-ji-you-dao-yun-bi-ji-md/"/>
      <url>/2021/11/25/shi-yong-vscode-bian-ji-you-dao-yun-bi-ji-md/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有道云笔记的 md 编辑体验太糟糕, VSCode 则很好, 但是有道云笔记不支持使用外部编辑器打开<br>而且有道创建的真实文件路径太深, 和 UI 上显示的也不一致</p></blockquote><p>下面是使用 VSCode 自动打开有道云笔记创建的 md 的方法</p><p><strong>需要安装 <code>nodejs</code></strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"child_process"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execSync<span class="token punctuation">;</span><span class="token keyword">const</span> BASE_PATH <span class="token operator">=</span>  <span class="token string">"C:\\Users\\[用户名]\\AppData\\Local\\YNote\\Data\\[你的账号目录]"</span><span class="token punctuation">;</span><span class="token punctuation">{</span>  <span class="token keyword">const</span> newLog <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    arguments<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>oLog<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> newError <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    arguments<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>oError<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  newLog<span class="token punctuation">.</span>oLog <span class="token operator">=</span> console<span class="token punctuation">.</span>log<span class="token punctuation">;</span>  newError<span class="token punctuation">.</span>oError <span class="token operator">=</span> console<span class="token punctuation">.</span>error<span class="token punctuation">;</span>  console<span class="token punctuation">.</span>log <span class="token operator">=</span> newLog<span class="token punctuation">;</span>  console<span class="token punctuation">.</span>error <span class="token operator">=</span> newError<span class="token punctuation">;</span><span class="token punctuation">}</span>fs<span class="token punctuation">.</span><span class="token function">watch</span><span class="token punctuation">(</span>  BASE_PATH<span class="token punctuation">,</span>  <span class="token punctuation">{</span>    recursive<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> filename<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>filename <span class="token operator">&amp;&amp;</span> filename<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">".md"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`code -r </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>BASE_PATH<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"开始执行......"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样在 有道云笔记 创建 md 就会自动使用 VScode 打开了, 就可以愉快的编辑了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>node 调用 cmd 命令</title>
      <link href="/2021/11/25/node-diao-yong-cmd-ming-ling/"/>
      <url>/2021/11/25/node-diao-yong-cmd-ming-ling/</url>
      
        <content type="html"><![CDATA[<p>例如使用 <code>VSCode</code> 打开某个文件</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"child_process"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execSync<span class="token punctuation">;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`code -r </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>BASE_PATH<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>filename<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>异步方式</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> exec <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"child_process"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>exec<span class="token punctuation">;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"command..."</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>error<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VUE 不同语言使用不同 CSS</title>
      <link href="/2021/11/04/vue-bu-tong-yu-yan-shi-yong-bu-tong-css/"/>
      <url>/2021/11/04/vue-bu-tong-yu-yan-shi-yong-bu-tong-css/</url>
      
        <content type="html"><![CDATA[<blockquote><p>VUE 国际化使用了多语言 插件 <code>vue-i18n</code>, 但是还遇到不同语言文本长度不一致等问题.</p></blockquote><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>需要应用的标签添加 <code>:lang="$i18n.locale"</code></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo<span class="token punctuation">"</span></span> <span class="token attr-name">:lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>$i18n.locale<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>css 语法 <code>:lang( &lt;language-code&gt; )</code></p><p>例如德语:</p><p>css</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.foo</span><span class="token pseudo-class">:lang(de)</span> </span><span class="token punctuation">{</span>  <span class="token number">...</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>less</p><pre class="line-numbers language-less"><code class="language-less"><span class="token selector">.foo</span> <span class="token punctuation">{</span>  <span class="token selector">... &amp;:lang(de)</span> <span class="token punctuation">{</span>    <span class="token number">...</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样语言为德语的情况下会应用 <code>:lang(de)</code> 里面的样式, 其他语言就不会</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:lang">:lang - CSS（层叠样式表） | MDN</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:lang">https://developer.mozilla.org/zh-CN/docs/Web/CSS/:lang</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VUE 使用 localStorage</title>
      <link href="/2021/11/04/vue-shi-yong-localstorage/"/>
      <url>/2021/11/04/vue-shi-yong-localstorage/</url>
      
        <content type="html"><![CDATA[<p><a href="https://cn.vuejs.org/v2/cookbook/client-side-storage.html">客户端存储 — Vue.js</a><br><a href="https://cn.vuejs.org/v2/cookbook/client-side-storage.html">https://cn.vuejs.org/v2/cookbook/client-side-storage.html</a></p><p>支持更好用的 API 的库</p><p><a href="https://github.com/RobinCK/vue-ls">RobinCK/vue-ls: Vue plugin for work with local storage, session storage and memory storage from Vue context</a><br><a href="https://github.com/RobinCK/vue-ls">https://github.com/RobinCK/vue-ls</a></p><p><code>main.js</code></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">const</span> optionsLS <span class="token operator">=</span> <span class="token punctuation">{</span>  namespace<span class="token punctuation">:</span> <span class="token string">"ls__"</span><span class="token punctuation">,</span>  name<span class="token punctuation">:</span> <span class="token string">"ls"</span><span class="token punctuation">,</span>  storage<span class="token punctuation">:</span> <span class="token string">"local"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">const</span> optionsSS <span class="token operator">=</span> <span class="token punctuation">{</span>  namespace<span class="token punctuation">:</span> <span class="token string">"ss__"</span><span class="token punctuation">,</span>  name<span class="token punctuation">:</span> <span class="token string">"ss"</span><span class="token punctuation">,</span>  storage<span class="token punctuation">:</span> <span class="token string">"session"</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Storage<span class="token punctuation">,</span> optionsLS<span class="token punctuation">)</span><span class="token punctuation">;</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> Storage<span class="token punctuation">)</span><span class="token punctuation">,</span> optionsSS<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><pre class="line-numbers language-js"><code class="language-js">  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$ls<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$ss<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  methods<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token function">xxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$ls<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$ss<span class="token punctuation">.</span><span class="token keyword">set</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.</title>
      <link href="/2021/10/28/hexo-support-for-password-authentication-was-removed-on-august-13-2021-please-use-a-personal-access-token-instead/"/>
      <url>/2021/10/28/hexo-support-for-password-authentication-was-removed-on-august-13-2021-please-use-a-personal-access-token-instead/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-Support-for-password-authentication-was-removed-on-August-13-2021-Please-use-a-personal-access-token-instead"><a href="#hexo-Support-for-password-authentication-was-removed-on-August-13-2021-Please-use-a-personal-access-token-instead" class="headerlink" title="hexo Support for password authentication was removed on August 13, 2021. Please use a personal access token instead."></a>hexo Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.</h1><p>先在 github 生成 token</p><p>Github-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens-&gt;”generate personal access tokens”</p><p>然后在 <code>_config.yml -&gt; deploy</code> 中修改 repo</p><pre><code>修改前repo: https://uasename:password@github.com/uasename/uasename.github.io.git修改后repo: https://your_token@github.com/uasename/uasename.github.io.git</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS 修改 !important 样式</title>
      <link href="/2021/10/28/js-xiu-gai-important-yang-shi/"/>
      <url>/2021/10/28/js-xiu-gai-important-yang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="可以使用-setProperty"><a href="#可以使用-setProperty" class="headerlink" title="可以使用 setProperty"></a>可以使用 setProperty</h2><p>属性不需要使用驼峰</p><pre class="line-numbers language-js"><code class="language-js">dom<span class="token punctuation">.</span>style<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">"font-size"</span><span class="token punctuation">,</span> <span class="token string">"16px"</span><span class="token punctuation">,</span> <span class="token string">"important"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以删除属性再添加</p><p><code>dom.style.removeProperty("xxx")</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js 数组方法 forEach map includes filter some every find findIndex reduce</title>
      <link href="/2020/12/12/js-shu-zu-fang-fa-foreach-map-includes-filter-some-every-find-findindex-reduce/"/>
      <url>/2020/12/12/js-shu-zu-fang-fa-foreach-map-includes-filter-some-every-find-findindex-reduce/</url>
      
        <content type="html"><![CDATA[<pre><code>forEach 普通遍历map 遍历 + 返回新数组, 不改变原数组includes 是否含有某值filter 返回符合条件的新数组, 不改变原数组some 一个就行 符合条件返回trueevery 全符合 否则返回falsefind 返回第一个符合条件的元素findIndex 返回第一个符合条件的索引reduce 递归累加</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 首字母大写 驼峰</title>
      <link href="/2020/12/12/js-shou-zi-mu-da-xie-tuo-feng/"/>
      <url>/2020/12/12/js-shou-zi-mu-da-xie-tuo-feng/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">toCamel</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\b(\w)(\w*)/g</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token number">0</span><span class="token punctuation">,</span> $<span class="token number">1</span><span class="token punctuation">,</span> $<span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> $<span class="token number">1</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> $<span class="token number">2</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">firstUpperCase</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/^\S/</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> s<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS 时间日期格式化</title>
      <link href="/2020/12/12/js-shi-jian-ri-qi-ge-shi-hua/"/>
      <url>/2020/12/12/js-shi-jian-ri-qi-ge-shi-hua/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">formatDate</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> mask<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> regular <span class="token operator">=</span> mask <span class="token operator">||</span> <span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> zeroize <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>value<span class="token punctuation">,</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>length<span class="token punctuation">)</span> length <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    value <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> zeros <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length <span class="token operator">-</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      zeros <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> zeros <span class="token operator">+</span> value<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> regular<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>    <span class="token regex">/"[^"]*"|'[^']*'|\b(?:d{1,4}|M{1,4}|yy(?:yy)?|([hHmstT])\1?|[lLZ])\b/g</span><span class="token punctuation">,</span>    <span class="token keyword">function</span> <span class="token punctuation">(</span>$<span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">switch</span> <span class="token punctuation">(</span>$<span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">case</span> <span class="token string">"d"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"dd"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"ddd"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"Sun"</span><span class="token punctuation">,</span> <span class="token string">"Mon"</span><span class="token punctuation">,</span> <span class="token string">"Tue"</span><span class="token punctuation">,</span> <span class="token string">"Wed"</span><span class="token punctuation">,</span> <span class="token string">"Thr"</span><span class="token punctuation">,</span> <span class="token string">"Fri"</span><span class="token punctuation">,</span> <span class="token string">"Sat"</span><span class="token punctuation">]</span><span class="token punctuation">[</span>d<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"dddd"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token punctuation">[</span>            <span class="token string">"Sunday"</span><span class="token punctuation">,</span>            <span class="token string">"Monday"</span><span class="token punctuation">,</span>            <span class="token string">"Tuesday"</span><span class="token punctuation">,</span>            <span class="token string">"Wednesday"</span><span class="token punctuation">,</span>            <span class="token string">"Thursday"</span><span class="token punctuation">,</span>            <span class="token string">"Friday"</span><span class="token punctuation">,</span>            <span class="token string">"Saturday"</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">[</span>d<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"M"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"MM"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"MMM"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token punctuation">[</span>            <span class="token string">"Jan"</span><span class="token punctuation">,</span>            <span class="token string">"Feb"</span><span class="token punctuation">,</span>            <span class="token string">"Mar"</span><span class="token punctuation">,</span>            <span class="token string">"Apr"</span><span class="token punctuation">,</span>            <span class="token string">"May"</span><span class="token punctuation">,</span>            <span class="token string">"Jun"</span><span class="token punctuation">,</span>            <span class="token string">"Jul"</span><span class="token punctuation">,</span>            <span class="token string">"Aug"</span><span class="token punctuation">,</span>            <span class="token string">"Sep"</span><span class="token punctuation">,</span>            <span class="token string">"Oct"</span><span class="token punctuation">,</span>            <span class="token string">"Nov"</span><span class="token punctuation">,</span>            <span class="token string">"Dec"</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">[</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"MMMM"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token punctuation">[</span>            <span class="token string">"January"</span><span class="token punctuation">,</span>            <span class="token string">"February"</span><span class="token punctuation">,</span>            <span class="token string">"March"</span><span class="token punctuation">,</span>            <span class="token string">"April"</span><span class="token punctuation">,</span>            <span class="token string">"May"</span><span class="token punctuation">,</span>            <span class="token string">"June"</span><span class="token punctuation">,</span>            <span class="token string">"July"</span><span class="token punctuation">,</span>            <span class="token string">"August"</span><span class="token punctuation">,</span>            <span class="token string">"September"</span><span class="token punctuation">,</span>            <span class="token string">"October"</span><span class="token punctuation">,</span>            <span class="token string">"November"</span><span class="token punctuation">,</span>            <span class="token string">"December"</span><span class="token punctuation">,</span>          <span class="token punctuation">]</span><span class="token punctuation">[</span>d<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"yy"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"yyyy"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"h"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">12</span> <span class="token operator">||</span> <span class="token number">12</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"hh"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">12</span> <span class="token operator">||</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"H"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"HH"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"m"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"mm"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"s"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"ss"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"l"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"L"</span><span class="token punctuation">:</span>          <span class="token keyword">let</span> m <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">getMilliseconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>m <span class="token operator">></span> <span class="token number">99</span><span class="token punctuation">)</span> m <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>m <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token function">zeroize</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"tt"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">12</span> <span class="token operator">?</span> <span class="token string">"am"</span> <span class="token punctuation">:</span> <span class="token string">"pm"</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"TT"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">12</span> <span class="token operator">?</span> <span class="token string">"AM"</span> <span class="token punctuation">:</span> <span class="token string">"PM"</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token string">"Z"</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> d<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex">/[A-Z]+$/</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>          <span class="token keyword">return</span> $<span class="token number">0</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> $<span class="token number">0</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebStorm 支持 rpx</title>
      <link href="/2020/12/12/webstorm-zhi-chi-rpx/"/>
      <url>/2020/12/12/webstorm-zhi-chi-rpx/</url>
      
        <content type="html"><![CDATA[<p>目前 WebStorm 还不支持 国内特有的 rpx 单位.<br>写 rpx 格式化后会出错.</p><p>使用 <code>less</code> 的 unit 可以解决这个问题<br>将 <code>XXrpx</code> 改成 <code>unit(XX, rpx);</code> 就可以了</p><pre class="line-numbers language-css"><code class="language-css"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">unit</span><span class="token punctuation">(</span><span class="token number">64</span>, rpx<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">unit</span><span class="token punctuation">(</span><span class="token number">64</span>, rpx<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token function">unit</span><span class="token punctuation">(</span><span class="token number">20</span>, rpx<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>再建一个 <code>Live Templates</code></p><p>File | Settings | Editor | Live Templates<br><img src="https://img-blog.csdnimg.cn/20200713112430838.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01BSU1JSE8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>输入 rp &gt; tab 键 就可以快捷的输入 unit(xx, rpx)</p>]]></content>
      
      
      
        <tags>
            
            <tag> WebStorm Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp stopPropagation 无效</title>
      <link href="/2020/12/12/uniapp-stoppropagation-wu-xiao/"/>
      <url>/2020/12/12/uniapp-stoppropagation-wu-xiao/</url>
      
        <content type="html"><![CDATA[<p>官方说明</p><blockquote><p>DCloud_UNI_GSQ</p></blockquote><blockquote><p>只支持使用修饰符，不支持使用 stopPropagation，因为这里的 event 对象并非浏览器的 evnet 对象，其本来没有 stopPropagation 方法，文档中也从未提及支持 stopPropagation 方法，实现中有 stopPropagation 方法是为了避免开发者使用引用的第三方代码使用了 stopPropagation 后报错。</p></blockquote><p>只能在标签上使用 <code>.stop</code></p><p>如果想根据 item 内容不同来判断是否需要 stop, 只能使用 <code>v-if</code> 写两个标签</p>]]></content>
      
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字体相关概念</title>
      <link href="/2020/12/12/zi-ti-xiang-guan-gai-nian/"/>
      <url>/2020/12/12/zi-ti-xiang-guan-gai-nian/</url>
      
        <content type="html"><![CDATA[<p>字体基本概念<br><a href="https://blog.csdn.net/flyeek/article/details/43970193">https://blog.csdn.net/flyeek/article/details/43970193</a><br>深入理解字体：参考线、line-box（行框）、content-area<br><a href="https://www.cnblogs.com/guyuedashu/p/12499328.html">https://www.cnblogs.com/guyuedashu/p/12499328.html</a><br>Android font, 字体全攻略<br><a href="https://www.jianshu.com/p/35328f7ac54a">https://www.jianshu.com/p/35328f7ac54a</a><br>Meaning of top, ascent, baseline, descent, bottom, and leading in Android’s FontMetrics<br><a href="https://stackoverflow.com/questions/27631736/meaning-of-top-ascent-baseline-descent-bottom-and-leading-in-androids-font/27631737#27631737">https://stackoverflow.com/questions/27631736/meaning-of-top-ascent-baseline-descent-bottom-and-leading-in-androids-font/27631737#27631737</a><br>Paint.FontMetrics<br><a href="https://developer.android.google.cn/reference/android/graphics/Paint.FontMetrics">https://developer.android.google.cn/reference/android/graphics/Paint.FontMetrics</a></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2x1b3NodWFpZGV2L2x1b3NodWFpZGV2LmdpdGh1Yi5pb0BpbWFnZS9KYXZhRlgvMjAyMDA3MTIxMjMwMzQ4MTkucG5n?x-oss-process=image/format,png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2x1b3NodWFpZGV2L2x1b3NodWFpZGV2LmdpdGh1Yi5pb0BpbWFnZS9KYXZhRlgvMjAyMDA3MTIxMjMwMzQ4MjgucG5n?x-oss-process=image/format,png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2x1b3NodWFpZGV2L2x1b3NodWFpZGV2LmdpdGh1Yi5pb0BpbWFnZS9KYXZhRlgvMjAyMDA3MTIxMjMwMzQ4MzAucG5n?x-oss-process=image/format,png"></p><p>Ascent - Descent: 字体实际大小, 背景填充区域<br>font-size: 字体相对大小<br>line-height: top - bottom</p>]]></content>
      
      
      
        <tags>
            
            <tag> 字体 Web Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 剪切板Clipboard</title>
      <link href="/2020/07/09/javafx-jian-qie-ban-clipboard/"/>
      <url>/2020/07/09/javafx-jian-qie-ban-clipboard/</url>
      
        <content type="html"><![CDATA[<h1 id="剪切板-Clipboard"><a href="#剪切板-Clipboard" class="headerlink" title="剪切板 Clipboard"></a>剪切板 Clipboard</h1><h2 id="粘贴文本"><a href="#粘贴文本" class="headerlink" title="粘贴文本"></a>粘贴文本</h2><pre class="line-numbers language-java"><code class="language-java">KeyCombination kc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyCodeCombination</span><span class="token punctuation">(</span>KeyCode<span class="token punctuation">.</span>V<span class="token punctuation">,</span> KeyCombination<span class="token punctuation">.</span>SHORTCUT_DOWN<span class="token punctuation">)</span><span class="token punctuation">;</span>scene<span class="token punctuation">.</span><span class="token function">getAccelerators</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>kc<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Clipboard clipboard <span class="token operator">=</span> Clipboard<span class="token punctuation">.</span><span class="token function">getSystemClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>clipboard<span class="token punctuation">.</span><span class="token function">hasString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            label<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>clipboard<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="粘贴图片"><a href="#粘贴图片" class="headerlink" title="粘贴图片"></a>粘贴图片</h2><p>剪切板中是 File</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>clipboard<span class="token punctuation">.</span><span class="token function">hasFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    List<span class="token operator">&lt;</span>File<span class="token operator">></span> files <span class="token operator">=</span> clipboard<span class="token punctuation">.</span><span class="token function">getFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"files = "</span> <span class="token operator">+</span> files<span class="token punctuation">)</span><span class="token punctuation">;</span>    Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>clipboard<span class="token punctuation">.</span><span class="token function">getFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    imageView<span class="token punctuation">.</span><span class="token function">setImage</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="剪切板中是图片"><a href="#剪切板中是图片" class="headerlink" title="剪切板中是图片"></a>剪切板中是图片</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>clipboard<span class="token punctuation">.</span><span class="token function">hasImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    Image image <span class="token operator">=</span> clipboard<span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    imageView<span class="token punctuation">.</span><span class="token function">setImage</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="剪切板存储数据"><a href="#剪切板存储数据" class="headerlink" title="剪切板存储数据"></a>剪切板存储数据</h2><pre class="line-numbers language-java"><code class="language-java">Clipboard clipboard <span class="token operator">=</span> Clipboard<span class="token punctuation">.</span><span class="token function">getSystemClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ClipboardContent clipboardContent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClipboardContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>clipboardContent<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>DataFormat<span class="token punctuation">.</span>PLAIN_TEXT<span class="token punctuation">,</span> <span class="token string">"Text"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>clipboardContent<span class="token punctuation">.</span><span class="token function">putImage</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image1.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>clipboard<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>clipboardContent<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="清空剪切板"><a href="#清空剪切板" class="headerlink" title="清空剪切板"></a>清空剪切板</h2><pre class="line-numbers language-java"><code class="language-java">clipboard<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX FileChooser &amp; DirectoryChooser</title>
      <link href="/2020/07/09/javafx-filechooser-directorychooser/"/>
      <url>/2020/07/09/javafx-filechooser-directorychooser/</url>
      
        <content type="html"><![CDATA[<h1 id="FileChooser-amp-DirectoryChooser"><a href="#FileChooser-amp-DirectoryChooser" class="headerlink" title="FileChooser &amp; DirectoryChooser"></a>FileChooser &amp; DirectoryChooser</h1><p>选择文件, 选择文件夹</p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200709211011188.png"></p><pre class="line-numbers language-java"><code class="language-java">Button button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"单选"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"多选"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"保存"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"文件夹选择"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>Node<span class="token operator">></span> children <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>children<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>button1<span class="token punctuation">,</span> button2<span class="token punctuation">,</span> button3<span class="token punctuation">,</span> button4<span class="token punctuation">)</span><span class="token punctuation">;</span>button1<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        FileChooser fileChooser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileChooser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"选择图片"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">getExtensionFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>                <span class="token keyword">new</span> <span class="token class-name">ExtensionFilter</span><span class="token punctuation">(</span><span class="token string">"图片类型"</span><span class="token punctuation">,</span> <span class="token string">"*.jpg"</span><span class="token punctuation">,</span> <span class="token string">"*.png"</span><span class="token punctuation">,</span> <span class="token string">"*.gif"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">ExtensionFilter</span><span class="token punctuation">(</span><span class="token string">"所有类型"</span><span class="token punctuation">,</span> <span class="token string">"*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//单选</span>        File file <span class="token operator">=</span> fileChooser<span class="token punctuation">.</span><span class="token function">showOpenDialog</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"file = "</span> <span class="token operator">+</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button2<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        FileChooser fileChooser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileChooser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"选择图片"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">getExtensionFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>                <span class="token keyword">new</span> <span class="token class-name">ExtensionFilter</span><span class="token punctuation">(</span><span class="token string">"图片类型"</span><span class="token punctuation">,</span> <span class="token string">"*.jpg"</span><span class="token punctuation">,</span> <span class="token string">"*.png"</span><span class="token punctuation">,</span> <span class="token string">"*.gif"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">ExtensionFilter</span><span class="token punctuation">(</span><span class="token string">"所有类型"</span><span class="token punctuation">,</span> <span class="token string">"*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//多选</span>        List<span class="token operator">&lt;</span>File<span class="token operator">></span> files <span class="token operator">=</span> fileChooser<span class="token punctuation">.</span><span class="token function">showOpenMultipleDialog</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"files = "</span> <span class="token operator">+</span> files<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button3<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        FileChooser fileChooser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileChooser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"保存文件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">setInitialFileName</span><span class="token punctuation">(</span><span class="token string">"InitialFileName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fileChooser<span class="token punctuation">.</span><span class="token function">getExtensionFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>                <span class="token keyword">new</span> <span class="token class-name">ExtensionFilter</span><span class="token punctuation">(</span><span class="token string">"文本类型"</span><span class="token punctuation">,</span> <span class="token string">"*.txt"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">new</span> <span class="token class-name">ExtensionFilter</span><span class="token punctuation">(</span><span class="token string">"所有类型"</span><span class="token punctuation">,</span> <span class="token string">"*.*"</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//保存</span>        File file <span class="token operator">=</span> fileChooser<span class="token punctuation">.</span><span class="token function">showSaveDialog</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"files = "</span> <span class="token operator">+</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token keyword">boolean</span> newFile <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">createNewFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>newFile<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button4<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        DirectoryChooser directoryChooser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DirectoryChooser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        directoryChooser<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"选择文件夹"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        File file <span class="token operator">=</span> directoryChooser<span class="token punctuation">.</span><span class="token function">showDialog</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"file = "</span> <span class="token operator">+</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Menu MenuButton&amp;SplitMenuButton</title>
      <link href="/2020/07/09/javafx-menu-menubutton-splitmenubutton/"/>
      <url>/2020/07/09/javafx-menu-menubutton-splitmenubutton/</url>
      
        <content type="html"><![CDATA[<h1 id="MenuButton-amp-SplitMenuButton"><a href="#MenuButton-amp-SplitMenuButton" class="headerlink" title="MenuButton&amp;SplitMenuButton"></a>MenuButton&amp;SplitMenuButton</h1><h2 id="MenuButton"><a href="#MenuButton" class="headerlink" title="MenuButton"></a>MenuButton</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200709205633565.png"></p><pre class="line-numbers language-java"><code class="language-java">MenuButton menuButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuButton</span><span class="token punctuation">(</span><span class="token string">"MenuButton"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menuButton<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span> separatorMenuItem<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span> menuHistory<span class="token punctuation">,</span>cmi1<span class="token punctuation">,</span> cmi2<span class="token punctuation">,</span> cmi3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="SplitMenuButton"><a href="#SplitMenuButton" class="headerlink" title="SplitMenuButton"></a>SplitMenuButton</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200709205633567.png"></p><pre class="line-numbers language-java"><code class="language-java">SplitMenuButton splitMenuButton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SplitMenuButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>splitMenuButton<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"SplitMenuButton"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>splitMenuButton<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span> separatorMenuItem<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span> menuHistory<span class="token punctuation">,</span>cmi1<span class="token punctuation">,</span> cmi2<span class="token punctuation">,</span> cmi3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Menu SeparatorMenuItem&amp;SubMenu</title>
      <link href="/2020/07/09/javafx-menu-separatormenuitem-submenu-1/"/>
      <url>/2020/07/09/javafx-menu-separatormenuitem-submenu-1/</url>
      
        <content type="html"><![CDATA[<h1 id="SeparatorMenuItem-amp-SubMenu"><a href="#SeparatorMenuItem-amp-SubMenu" class="headerlink" title="SeparatorMenuItem&amp;SubMenu"></a>SeparatorMenuItem&amp;SubMenu</h1><h2 id="SeparatorMenuItem"><a href="#SeparatorMenuItem" class="headerlink" title="SeparatorMenuItem"></a>SeparatorMenuItem</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200709205633569.png"></p><p>直接添加到 MenuItem 中间</p><pre class="line-numbers language-java"><code class="language-java">SeparatorMenuItem separatorMenuItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SeparatorMenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menu1<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span>  separatorMenuItem<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span>menuHistory<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="SubMenu"><a href="#SubMenu" class="headerlink" title="SubMenu"></a>SubMenu</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200709205633557.png"></p><p>添加一个 Menu 到 MenuItem 中</p><pre class="line-numbers language-java"><code class="language-java">Menu menuHistory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">"History"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem history1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"history1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem history2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"history2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem history3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"history3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menuHistory<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>history1<span class="token punctuation">,</span> history2<span class="token punctuation">,</span> history3<span class="token punctuation">)</span><span class="token punctuation">;</span>menu1<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span>  separatorMenuItem<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span>menuHistory<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Menu ContextMenu</title>
      <link href="/2020/07/09/javafx-menu-contextmenu/"/>
      <url>/2020/07/09/javafx-menu-contextmenu/</url>
      
        <content type="html"><![CDATA[<h1 id="ContextMenu"><a href="#ContextMenu" class="headerlink" title="ContextMenu"></a>ContextMenu</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200709205633563.png"></p><pre class="line-numbers language-java"><code class="language-java">ContextMenu contextMenu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContextMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem contextMenu1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"contextMenu1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem contextMenu2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"contextMenu2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem contextMenu3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"contextMenu3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MenuItem点击</span>contextMenu1<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"contextMenu1.setOnAction"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>contextMenu<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>contextMenu1<span class="token punctuation">,</span> contextMenu2<span class="token punctuation">,</span> contextMenu3<span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setContextMenu</span><span class="token punctuation">(</span>contextMenu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ContextMenu弹出</span>button<span class="token punctuation">.</span><span class="token function">setOnContextMenuRequested</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ContextMenuEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ContextMenuEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"button.setOnContextMenuRequested"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Menu RadioMenuItem&amp;CheckMenuItem&amp;CustomMenuItem</title>
      <link href="/2020/07/02/javafx-menu-radiomenuitem-checkmenuitem-custommenuitem/"/>
      <url>/2020/07/02/javafx-menu-radiomenuitem-checkmenuitem-custommenuitem/</url>
      
        <content type="html"><![CDATA[<h1 id="MenuItem"><a href="#MenuItem" class="headerlink" title="MenuItem"></a>MenuItem</h1><h2 id="RadioMenuItem"><a href="#RadioMenuItem" class="headerlink" title="RadioMenuItem"></a>RadioMenuItem</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200702202233290.png"></p><pre class="line-numbers language-java"><code class="language-java">ToggleGroup toggleGroup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToggleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>RadioMenuItem rmi1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioMenuItem</span><span class="token punctuation">(</span><span class="token string">"RadioMenuItem1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>RadioMenuItem rmi2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioMenuItem</span><span class="token punctuation">(</span><span class="token string">"RadioMenuItem2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>RadioMenuItem rmi3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioMenuItem</span><span class="token punctuation">(</span><span class="token string">"RadioMenuItem3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>toggleGroup<span class="token punctuation">.</span><span class="token function">getToggles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>rmi1<span class="token punctuation">,</span> rmi2<span class="token punctuation">,</span> rmi3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//选中</span>rmi2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menu2<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>rmi1<span class="token punctuation">,</span> rmi2<span class="token punctuation">,</span> rmi3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CheckMenuItem"><a href="#CheckMenuItem" class="headerlink" title="CheckMenuItem"></a>CheckMenuItem</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200702202233292.png"></p><pre class="line-numbers language-java"><code class="language-java">CheckMenuItem cmi1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckMenuItem</span><span class="token punctuation">(</span><span class="token string">"CheckMenuItem1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CheckMenuItem cmi2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckMenuItem</span><span class="token punctuation">(</span><span class="token string">"CheckMenuItem2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CheckMenuItem cmi3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckMenuItem</span><span class="token punctuation">(</span><span class="token string">"CheckMenuItem3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cmi2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menu3<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cmi1<span class="token punctuation">,</span> cmi2<span class="token punctuation">,</span> cmi3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CustomMenuItem"><a href="#CustomMenuItem" class="headerlink" title="CustomMenuItem"></a>CustomMenuItem</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200702202233271.png"></p><pre class="line-numbers language-java"><code class="language-java">CustomMenuItem cmi1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomMenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cmi1<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CustomMenuItem cmi2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomMenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cmi2<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Label"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CustomMenuItem cmi3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CustomMenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>HBox hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Btn1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Btn2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hBox<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cmi3<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>hBox<span class="token punctuation">)</span><span class="token punctuation">;</span>menu3<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cmi1<span class="token punctuation">,</span> cmi2<span class="token punctuation">,</span> cmi3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Menu SeparatorMenuItem&amp;SubMenu</title>
      <link href="/2020/07/02/javafx-menu-separatormenuitem-submenu/"/>
      <url>/2020/07/02/javafx-menu-separatormenuitem-submenu/</url>
      
        <content type="html"><![CDATA[<h1 id="SeparatorMenuItem-amp-SubMenu"><a href="#SeparatorMenuItem-amp-SubMenu" class="headerlink" title="SeparatorMenuItem&amp;SubMenu"></a>SeparatorMenuItem&amp;SubMenu</h1><h2 id="SeparatorMenuItem"><a href="#SeparatorMenuItem" class="headerlink" title="SeparatorMenuItem"></a>SeparatorMenuItem</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200702202233286.png"></p><p>直接添加到 MenuItem 中间</p><pre class="line-numbers language-java"><code class="language-java">SeparatorMenuItem separatorMenuItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SeparatorMenuItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menu1<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span>  separatorMenuItem<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span>menuHistory<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="SubMenu"><a href="#SubMenu" class="headerlink" title="SubMenu"></a>SubMenu</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200702202233288.png"></p><p>添加一个 Menu 到 MenuItem 中</p><pre class="line-numbers language-java"><code class="language-java">Menu menuHistory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">"History"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem history1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"history1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem history2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"history2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem history3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"history3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menuHistory<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>history1<span class="token punctuation">,</span> history2<span class="token punctuation">,</span> history3<span class="token punctuation">)</span><span class="token punctuation">;</span>menu1<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span>  separatorMenuItem<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span>menuHistory<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Menu MenuBar&amp;Menu&amp;MenuItem</title>
      <link href="/2020/07/02/javafx-menu-menubar-menu-menuitem/"/>
      <url>/2020/07/02/javafx-menu-menubar-menu-menuitem/</url>
      
        <content type="html"><![CDATA[<h1 id="MenuBar-amp-Menu-amp-MenuItem"><a href="#MenuBar-amp-Menu-amp-MenuItem" class="headerlink" title="MenuBar&amp;Menu&amp;MenuItem"></a>MenuBar&amp;Menu&amp;MenuItem</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200702202233284.png"></p><pre class="line-numbers language-java"><code class="language-java">MenuBar menuBar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Menu menu1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">"File"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Menu menu2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">"Edit"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Menu menu3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string">"Help"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menuBar<span class="token punctuation">.</span><span class="token function">getMenus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menu1<span class="token punctuation">,</span> menu2<span class="token punctuation">,</span> menu3<span class="token punctuation">)</span><span class="token punctuation">;</span>menu1<span class="token punctuation">.</span><span class="token function">setOnShowing</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"menu1.setOnShowing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//已经显示</span>menu1<span class="token punctuation">.</span><span class="token function">setOnShown</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"menu1.setOnShown"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加Icon</span>MenuItem menuItem1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"Item1"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\stash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem menuItem2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"Item2"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\unstash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>MenuItem menuItem3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MenuItem</span><span class="token punctuation">(</span><span class="token string">"Item3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//MenuItem点击事件</span>menuItem1<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"menuItem1.setOnAction"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//添加快捷键</span>menuItem1<span class="token punctuation">.</span><span class="token function">setAccelerator</span><span class="token punctuation">(</span>KeyCombination<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"Ctrl+N"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//快捷键触发时回调</span>menuItem1<span class="token punctuation">.</span><span class="token function">setOnMenuValidation</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"menuItem1.setOnMenuValidation"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>menu1<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>menuItem1<span class="token punctuation">,</span> menuItem2<span class="token punctuation">,</span> menuItem3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uniapp 配置webpack-dev-server代理 解决开发环境跨域问题</title>
      <link href="/2020/06/06/uniapp-pei-zhi-webpack-dev-server-dai-li-jie-jue-kai-fa-huan-jing-kua-yu-wen-ti/"/>
      <url>/2020/06/06/uniapp-pei-zhi-webpack-dev-server-dai-li-jie-jue-kai-fa-huan-jing-kua-yu-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>项目根目录下创建 <code>vue.config.js</code></p><pre class="line-numbers language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>    proxy<span class="token punctuation">:</span> <span class="token punctuation">{</span>      <span class="token string">"/api"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//代理 /api/xxx/xxx 的请求</span>        target<span class="token punctuation">:</span> <span class="token string">"你要请求接口的地址"</span><span class="token punctuation">,</span>        pathRewrite<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token string">"^/api"</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开发环境的 BASE_URL 如下<br><code>const BASE_URL = "/api";</code><br>request 的 url 为 /xxx/yyy<br>会被代理到 target/xxx/yyy</p><p>参考:</p><p><a href="https://www.webpackjs.com/configuration/dev-server/#devserver">https://www.webpackjs.com/configuration/dev-server/#devserver</a></p><p><a href="https://cli.vuejs.org/zh/config/#devserver">https://cli.vuejs.org/zh/config/#devserver</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器的同源策略 同源的定义</title>
      <link href="/2020/06/06/liu-lan-qi-de-tong-yuan-ce-lue-tong-yuan-de-ding-yi/"/>
      <url>/2020/06/06/liu-lan-qi-de-tong-yuan-ce-lue-tong-yuan-de-ding-yi/</url>
      
        <content type="html"><![CDATA[<h2 id="同源"><a href="#同源" class="headerlink" title="同源"></a>同源</h2><p>“同源”指的是”三个相同”</p><ul><li>协议相同</li><li>域名相同</li><li>端口相同</li></ul><p>举例来说，<a href="http://www.example.com/dir/page.html%E8%BF%99%E4%B8%AA%E7%BD%91%E5%9D%80%EF%BC%8C%E5%8D%8F%E8%AE%AE%E6%98%AF%60http://%60%EF%BC%8C%E5%9F%9F%E5%90%8D%E6%98%AF%60www.example.com%60%EF%BC%8C%E7%AB%AF%E5%8F%A3%E6%98%AF%6080%60%EF%BC%88%E9%BB%98%E8%AE%A4%E7%AB%AF%E5%8F%A3%E5%8F%AF%E4%BB%A5%E7%9C%81%E7%95%A5%EF%BC%89">http://www.example.com/dir/page.html这个网址，协议是`http://`，域名是`www.example.com`，端口是`80`（默认端口可以省略）</a></p><p>示例:<br>URL: <strong><a href="http://store.company.com/dir/page.html">http://store.company.com/dir/page.html</a></strong></p><table><thead><tr><th>URL</th><th>结果</th><th>原因</th></tr></thead><tbody><tr><td><a href="http://store/.company/.com/dir2/other/.html">http://store\.company\.com/dir2/other\.html</a></td><td>同源</td><td>只有路径不同</td></tr><tr><td><a href="http://store/.company/.com/dir/inner/another/.html">http://store\.company\.com/dir/inner/another\.html</a></td><td>同源</td><td>只有路径不同</td></tr><tr><td><a href="https://store/.company/.com/secure/.html">https://store\.company\.com/secure\.html</a></td><td>失败</td><td>协议不同</td></tr><tr><td><a href="http://store/.company/.com:81/dir/etc/.html">http://store\.company\.com:81/dir/etc\.html</a></td><td>失败</td><td>端口不同 ( http:// 默认端口是 80)</td></tr><tr><td><a href="http://news/.company/.com/dir/other/.html">http://news\.company\.com/dir/other\.html</a></td><td>失败</td><td>主机不同</td></tr></tbody></table><h2 id="不同源的限制"><a href="#不同源的限制" class="headerlink" title="不同源的限制"></a>不同源的限制</h2><ol><li>Cookie、LocalStorage 和 IndexDB 无法读取。</li><li>DOM 无法获得。</li><li>AJAX 请求不能发送。</li></ol><p>参考<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy">https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy</a></p><p><a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html">http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS</a></p><p><a href="https://www.jianshu.com/p/a0dd1e712c3a">https://www.jianshu.com/p/a0dd1e712c3a</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven插件 maven-shade-plugin</title>
      <link href="/2020/06/06/maven-cha-jian-maven-shade-plugin/"/>
      <url>/2020/06/06/maven-cha-jian-maven-shade-plugin/</url>
      
        <content type="html"><![CDATA[<p>原文:<br><a href="https://my.oschina.net/u/2377110/blog/1585553">https://my.oschina.net/u/2377110/blog/1585553</a></p><p>网上有一些 maven-shade-plugin 替代 maven-assembly-plugin 的文章，原因是代 maven-assembly-plugin 打出的 jar 包中要么是不能设置 Main-Class，要么 spring 的 META-INF/spring.*文件相互覆盖了。对于这两个问题，maven-assembly-plugin 在当前的版本(3.1.0)中都可以解决了(方法见<a href="https://my.oschina.net/u/2377110/blog/1584205)%E3%80%82">https://my.oschina.net/u/2377110/blog/1584205)。</a></p><p>实际上这两个插件所针对的用途其实是有差异的，而它们与 maven 默认的 maven-jar-plugin 都是打包插件，简单的区别如下：</p><table><thead><tr><th>plugin</th><th>function</th></tr></thead><tbody><tr><td>maven-jar-plugin</td><td>maven 默认打包插件，用来创建 project jar</td></tr><tr><td>maven-shade-plugin</td><td>用来打可执行包，包含依赖，以及对依赖进行取舍过滤</td></tr><tr><td>maven-assembly-plugin</td><td>支持定制化打包方式，更多是对项目目录的重新组装</td></tr></tbody></table><p>当你只想将项目打成一个可执行包时，maven-shade-plugin 非常适合。一般情况下，pom 文件中 shade 插件配置如下。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-shade-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">></span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>shade<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filters</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifact</span><span class="token punctuation">></span></span>*:*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifact</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>META-INF/*.SF<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>META-INF/*.DSA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>META-INF/*.RSA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filters</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformers</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span>                                <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.ManifestResourceTransformer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.lcifn.Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformer</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span>                                <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.AppendingTransformer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>META-INF/spring.handlers<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformer</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span>                                <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.AppendingTransformer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>META-INF/spring.schemas<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformer</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformers</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>shade 插件绑定的是 package 生命周期目标，并设置 com.lcifn.Application 为 Main-Class，以及将 META-INF/spring.*文件合并(追加而非覆盖)，并过滤掉所有依赖的 META/INF 中 SF,DSA,RSA 后缀文件。这里涉及到 filter 配置和 transformer 配置。</p></blockquote><h2 id="filters-和-artifactSet"><a href="#filters-和-artifactSet" class="headerlink" title="filters 和 artifactSet"></a>filters 和 artifactSet</h2><p>Filter 操作在打包时将 jar 包中的内容排除。它是以 groupId:artifactId 为标识，在 filter 内部可以使用&lt;include&gt;/&lt;exclude&gt;更细致地控制，既可以移除代码文件，也可以移除配置文件。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 按package过滤junit包 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filters</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifact</span><span class="token punctuation">></span></span>junit:junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifact</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>junit/framework/**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>org/junit/**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>org/junit/experimental/**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>org/junit/runners/**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filters</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果想将整个 jar 包都过滤掉，可以使用&lt;artifactSet&gt;，也是指定 groupId:artifactId 的标识。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactSet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>classworlds:classworlds<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>junit:junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>jmock:*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>*:xml-apis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>org.apache.maven:lib:tests<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>log4j:log4j:jar:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactSet</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外配置&lt;minimizeJar&gt;将项目中没有使用的依赖自动移除</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>minimizeJar</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>minimizeJar</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>&lt;minimizeJar&gt;可以和&lt;filters&gt;共同使用</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>minimizeJar</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>minimizeJar</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filters</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifact</span><span class="token punctuation">></span></span>log4j:log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifact</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifact</span><span class="token punctuation">></span></span>commons-logging:commons-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifact</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filters</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="资源转换"><a href="#资源转换" class="headerlink" title="资源转换"></a>资源转换</h2><p>在打包时，存在将多个构件中的 class 文件或资源文件聚合的需求。shade 插件提供了丰富的 Transformer 工具类。这里介绍一些常用的 Transformer。</p><h3 id="ManifestResourceTransformer"><a href="#ManifestResourceTransformer" class="headerlink" title="ManifestResourceTransformer"></a>ManifestResourceTransformer</h3><p>往 MANIFEST 文件中写入 Main-Class 是可执行包的必要条件。ManifestResourceTransformer 可以轻松实现。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span>            <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.ManifestResourceTransformer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.lcifn.Application<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="AppendingTransformer"><a href="#AppendingTransformer" class="headerlink" title="AppendingTransformer"></a>AppendingTransformer</h3><p>用来处理多个 jar 包中存在重名的配置文件的合并，尤其是 spring。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span>            <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.AppendingTransformer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>META-INF/spring.handlers<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformer</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span>            <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.AppendingTransformer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">></span></span>META-INF/spring.schemas<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ServicesResourceTransformer"><a href="#ServicesResourceTransformer" class="headerlink" title="ServicesResourceTransformer"></a>ServicesResourceTransformer</h3><p>JDK 的服务发现机制是基于 META-INF/services/目录的，如果同一接口存在多个实现需要合并 ，则可以使用此 Transformer。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transformer</span> <span class="token attr-name">implementation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.apache.maven.plugins.shade.resource.ServicesResourceTransformer<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transformers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更多的 Transformer 见<a href="http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html">http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html</a></p><h3 id="原始构件与-shade-构件"><a href="#原始构件与-shade-构件" class="headerlink" title="原始构件与 shade 构件"></a>原始构件与 shade 构件</h3><p>默认情况下，shade 插件会覆盖基于项目的 jar 包，而生成包含所有依赖的 jar 包。但有时需要原始的 jar 包和 shade 后的 jar 包同时被部署，可以配置如下。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shadedArtifactAttached</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shadedArtifactAttached</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 名称会作为后缀在shade构件jar包后 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>shadedClassifierName</span><span class="token punctuation">></span></span>jackofall<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>shadedClassifierName</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>参考：</p><p><a href="http://maven.apache.org/plugins/maven-shade-plugin/index.html">http://maven.apache.org/plugins/maven-shade-plugin/index.html</a><br><a href="http://www.jianshu.com/p/14bcb17b99e0">http://www.jianshu.com/p/14bcb17b99e0</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Could not transfer artifact xxx from/to alimaven (http://maven.aliyun.com/nexus/content/groups/publi</title>
      <link href="/2020/06/06/could-not-transfer-artifact-xxx-from-to-alimaven-http-maven-aliyun-com-nexus-content-groups-publi/"/>
      <url>/2020/06/06/could-not-transfer-artifact-xxx-from-to-alimaven-http-maven-aliyun-com-nexus-content-groups-publi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Could not transfer artifact xxx from/to alimaven (<a href="http://maven.aliyun.com/nexus/content/groups/public/">http://maven.aliyun.com/nexus/content/groups/public/</a>): Authorization failed for <a href="http://maven.aliyun.com/nexus/content/groups/public/xxx.jar">http://maven.aliyun.com/nexus/content/groups/public/xxx.jar</a> 403 Forbidden</p></blockquote><p>如果你配置过 alimaven 镜像</p><p>前往路径: <code>C:\Users\[用户名]\.m2\settings.xml</code><br>将 <code>&lt;mirrors&gt; ...alimaven... &lt;/mirrors&gt;</code> 里的 alimaven 暂时注释掉</p>]]></content>
      
      
      
        <tags>
            
            <tag> Java Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win10 jar 不能双击运行</title>
      <link href="/2020/06/06/win10-jar-bu-neng-shuang-ji-yun-xing/"/>
      <url>/2020/06/06/win10-jar-bu-neng-shuang-ji-yun-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="win10-jar-不能双击运行"><a href="#win10-jar-不能双击运行" class="headerlink" title="win10 jar 不能双击运行"></a>win10 jar 不能双击运行</h1><h2 id="修改注册表"><a href="#修改注册表" class="headerlink" title="修改注册表"></a>修改注册表</h2><p>修改的注册表项的值最好和 JAVA_HOME 路径保持一致</p><pre class="line-numbers language-bash"><code class="language-bash">HKEY_CLASSES_ROOT\Applications\javaw.exe\shell\open\command<span class="token string">"C:\Dev\Java\jdk-11.0.6\bin\javaw.exe"</span> -jar <span class="token string">"%1"</span>HKEY_CURRENT_USER\Software\Classes\.jar_auto_file\shell\open\command<span class="token string">"C:\Dev\Java\jdk-11.0.6\bin\javaw.exe"</span> -jar <span class="token string">"%1"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/20200530174509721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01BSU1JSE8=,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>很多文章提到改第一条, 但是我的电脑上改了还是不能双击打开, 改了第二条后就可以双击运行了.</p><p>如果 jar 默认打开方式被别的软件关联了, 可以右键–打开方式–选中上面路径对应的 <strong>javaw.exe</strong></p><p><img src="https://img-blog.csdnimg.cn/20200530174908270.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Uniapp 修改内置组件样式无效解决方法</title>
      <link href="/2020/06/06/uniapp-xiu-gai-nei-zhi-zu-jian-yang-shi-wu-xiao-jie-jue-fang-fa/"/>
      <url>/2020/06/06/uniapp-xiu-gai-nei-zhi-zu-jian-yang-shi-wu-xiao-jie-jue-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Uniapp-修改内置组件样式无效解决方法"><a href="#Uniapp-修改内置组件样式无效解决方法" class="headerlink" title="Uniapp 修改内置组件样式无效解决方法"></a>Uniapp 修改内置组件样式无效解决方法</h1><p>例如 修改 CheckBox 样式<br>DOM 结构如下</p><pre class="line-numbers language-css"><code class="language-css">&lt;uni-checkbox data-v-<span class="token number">9437</span>ae<span class="token number">50</span>=<span class="token string">""</span> class=<span class="token string">"checkbox"</span> style=<span class="token string">"transform: scale(0.8);"</span>>    &lt;div class=<span class="token string">"uni-checkbox-wrapper"</span>>        &lt;div class=<span class="token string">"uni-checkbox-input uni-checkbox-input-checked"</span> style=<span class="token string">"color: rgb(13, 28, 74);"</span>>&lt;/div>    &lt;/div>&lt;/uni-checkbox><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果要覆盖 uni-checkbox-input uni-checkbox-input-checked 的样式, 直接写不会生效.</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法:"></a>解决方法:</h2><ol><li>写到 App.vue 公共样式中</li><li>使用 深度作用选择器<br><a href="https://vue-loader-v14.vuejs.org/zh-cn/features/scoped-css.html">https://vue-loader-v14.vuejs.org/zh-cn/features/scoped-css.html </a><br>css 中使用<br>.a &gt;&gt;&gt; .b<br>less 中使用<br>.a /deep/ .b</li></ol><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.checkbox</span> >>> <span class="token class">.uni-checkbox-input</span> </span><span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.checkbox</span> </span><span class="token punctuation">{</span>  <span class="token selector">/deep/ <span class="token class">.uni-checkbox-input</span> </span><span class="token punctuation">{</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">50%</span><span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token selector">/deep/ &amp;<span class="token pseudo-class">:not([disabled])</span> <span class="token class">.uni-checkbox-input</span> </span><span class="token punctuation">{</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token hexcode">#0d1c4a</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> uniapp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git 新建 无历史 分支 orphan</title>
      <link href="/2020/06/06/git-xin-jian-wu-li-shi-fen-zhi-orphan/"/>
      <url>/2020/06/06/git-xin-jian-wu-li-shi-fen-zhi-orphan/</url>
      
        <content type="html"><![CDATA[<h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> checkout --orphan <span class="token punctuation">[</span>新分支名<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> -rf <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="新建文件-commit"><a href="#新建文件-commit" class="headerlink" title="新建文件, commit"></a>新建文件, commit</h2><p>剩下的操作和普通操作没区别</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>更纱黑体命名含义</title>
      <link href="/2020/06/06/geng-sha-hei-ti-ming-ming-han-yi/"/>
      <url>/2020/06/06/geng-sha-hei-ti-ming-ming-han-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="更纱黑体命名含义"><a href="#更纱黑体命名含义" class="headerlink" title="更纱黑体命名含义"></a>更纱黑体命名含义</h1><p>cl: Classical orthography<br>sc: Simplified Chinese<br>tc: Traditional Chinese<br>HC: Hong Kong Chinese<br>j : Japanese<br>k : Korean</p><p>mono: 代表 monospace，即等宽字体<br>LGC : 代表 Latin-Greek-Cyrillic subset，即拉丁-希腊-西里尔字符集<br>Slab: Slab 现在指的是带有超厚笔划粗细的字体。</p><h2 id="LGC-设定为思源黑体（Noto-Sans-Source-Han-Sans）字型的情形："><a href="#LGC-设定为思源黑体（Noto-Sans-Source-Han-Sans）字型的情形：" class="headerlink" title="LGC 设定为思源黑体（Noto Sans / Source Han Sans）字型的情形："></a>LGC 设定为思源黑体（Noto Sans / Source Han Sans）字型的情形：</h2><p>引号为全角时，为 Gothic（哥特式）字体<br>引号比较窄时，为 UI（用户界面）字体</p><h2 id="LGC-设定为-losevka-字型的情形："><a href="#LGC-设定为-losevka-字型的情形：" class="headerlink" title="LGC 设定为 losevka 字型的情形："></a>LGC 设定为 losevka 字型的情形：</h2><p>包含 ligature（连字）以及 Em dashes（即长连接符，长度为 En dashes 的两倍 ，而最短的称作 hyphen）为全角时，是 Mono 字体<br>包含 ligature（连字）以及 Em dashes 为半角时，是 Term 字体<br>没有 ligature（连字）而 Em dashes 为半角时，是 Fixed 字体</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://download.csdn.net/download/MAIMIHO/12490128">https://download.csdn.net/download/MAIMIHO/12490128</a></p><p>参考:</p><p><a href="https://www.zhihu.com/question/48379637/answer/537334663">https://www.zhihu.com/question/48379637/answer/537334663</a> <code>Stephen Zhao</code> 的回答</p>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Terminal + PowerShell Core 美化</title>
      <link href="/2020/06/06/windows-terminal-powershell-core-mei-hua/"/>
      <url>/2020/06/06/windows-terminal-powershell-core-mei-hua/</url>
      
        <content type="html"><![CDATA[<h2 id="最终效果"><a href="#最终效果" class="headerlink" title="最终效果"></a>最终效果</h2><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2x1b3NodWFpZGV2L2x1b3NodWFpZGV2LmdpdGh1Yi5pb0BpbWFnZS8yMDIwMDYwMzA5MjkxMzk2NS5wbmc?x-oss-process=image/format,png"></p><h2 id="安装-Windows-Terminal"><a href="#安装-Windows-Terminal" class="headerlink" title="安装 Windows Terminal"></a>安装 Windows Terminal</h2><p>应用商店中搜索, 下载</p><h2 id="下载-PowerShell-Core"><a href="#下载-PowerShell-Core" class="headerlink" title="下载 PowerShell Core"></a>下载 PowerShell Core</h2><p><a href="https://github.com/PowerShell/PowerShell/releases">https://github.com/PowerShell/PowerShell/releases</a></p><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>Sarasa[更纱黑体]</p><p><a href="https://github.com/be5invis/Sarasa-Gothic">https://github.com/be5invis/Sarasa-Gothic</a></p><p>这里是搬运地址:<br><a href="https://download.csdn.net/download/MAIMIHO/12490128">https://download.csdn.net/download/MAIMIHO/12490128</a></p><p>安装 <code>Sarasa Term SC</code></p><h2 id="Windows-terminal-Setting"><a href="#Windows-terminal-Setting" class="headerlink" title="Windows terminal Setting"></a>Windows terminal Setting</h2><p>打开 <code>Windows terminal</code> 设置, 替换如下, 注意里面的路径替换为自己的</p><pre><code>{  "$schema": "https://aka.ms/terminal-profiles-schema",  "defaultProfile": "{195e5e70-802f-4ae6-a4e6-57eff2b90258}",  "copyOnSelect": false,  "copyFormatting": false,  "theme": "dark",  "launchMode": "maximized",  "snapToGridOnResize": false,  "profiles": {    "defaults": {      "colorScheme": "Dracula",      //背景透明度,      "acrylicOpacity": 0.8,      // 启用毛玻璃,      "useAcrylic": true,      //背景图片,      "backgroundImage": "你的背景图片路径",      //图片透明度,      "backgroundImageOpacity": 0.5,      //填充模式,      "backgroundImageStretchMode": "fill",      //字体,      "fontFace": "Sarasa Term SC",      //文字大小,      "fontSize": 14,      //光标颜色,      "cursorColor": "#FFFFFF",      //光标形状,      "cursorShape": "bar",      "startingDirectory": ".",      "antialiasingMode": "cleartype"    },    "list": [      {        "guid": "{195e5e70-802f-4ae6-a4e6-57eff2b90258}",        "name": "PowerShell Core",        "icon": "C:\\Dev\\PowerShell\\assets\\Powershell_av_colors.ico",        "commandline": "C:\\Dev\\PowerShell\\pwsh.exe -nologo",        "hidden": false      },      {        "guid": "{61c54bbd-c2c6-5271-96e7-009a87ff44bf}",        "name": "Windows PowerShell",        "commandline": "powershell.exe",        "hidden": false      },      {        "guid": "{0caa0dad-35be-5f56-a8ff-afceeeaa6101}",        "name": "命令提示符",        "commandline": "cmd.exe",        "hidden": false      },      {        "guid": "{b453ae62-4e3d-5e58-b989-0a998ec441b8}",        "hidden": false,        "name": "Azure Cloud Shell",        "source": "Windows.Terminal.Azure"      }    ]  },  "schemes": [    {      "name": "Dracula",      "background": "#272935",      "black": "#21222C",      "blue": "#BD93F9",      "cyan": "#8BE9FD",      "foreground": "#F8F8F2",      "green": "#50FA7B",      "purple": "#FF79C6",      "red": "#FF5555",      "white": "#F8F8F2",      "yellow": "#FFB86C",      "brightBlack": "#6272A4",      "brightBlue": "#D6ACFF",      "brightCyan": "#A4FFFF",      "brightGreen": "#69FF94",      "brightPurple": "#FF92DF",      "brightRed": "#FF6E6E",      "brightWhite": "#F8F8F2",      "brightYellow": "#FFFFA5"    }  ],  "keybindings": [    {      "command": {        "action": "copy",        "singleLine": false      },      "keys": "ctrl+c"    },    {      "command": "paste",      "keys": "ctrl+v"    },    {      "command": "find",      "keys": "ctrl+shift+f"    },    {      "command": {        "action": "splitPane",        "split": "auto",        "splitMode": "duplicate"      },      "keys": "alt+shift+d"    }  ]}</code></pre><h2 id="权限设置"><a href="#权限设置" class="headerlink" title="权限设置"></a>权限设置</h2><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true">##允许执行脚本</span>set-executionpolicy remotesigned<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><p>遇到提示统一选 <code>是</code> <code>Y</code></p><pre class="line-numbers language-bash"><code class="language-bash">Install-Module -Name PSReadLine -AllowPrerelease -ForceInstall-Module git-aliases -AllowClobberInstall-Module posh-gitInstall-Module oh-my-poshInstall-Module DirColors<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="保存配置"><a href="#保存配置" class="headerlink" title="保存配置"></a>保存配置</h2><h3 id="打开配置文件"><a href="#打开配置文件" class="headerlink" title="打开配置文件"></a>打开配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash">code <span class="token variable">$PROFILE</span> <span class="token punctuation">(</span>notpad <span class="token variable">$PROFILE</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># VSCode or 记事本打开</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="输入以下-gt-保存"><a href="#输入以下-gt-保存" class="headerlink" title="输入以下 -> 保存"></a>输入以下 -&gt; 保存</h3><pre class="line-numbers language-ps"><code class="language-ps">Import-Module DirColorsImport-Module posh-gitImport-Module oh-my-poshImport-Module git-aliases -DisableNameCheckingSet-Theme PowerLine#-------------------------------  Set Hot-keys BEGIN  -------------------------------# 设置 Tab 键补全# Set-PSReadlineKeyHandler -Key Tab -Function Complete# 设置 Tab 为菜单补全和 IntellisenseSet-PSReadLineKeyHandler -Key "Tab" -Function MenuComplete# 设置 Ctrl+d 为退出 PowerShellSet-PSReadlineKeyHandler -Key "Ctrl+d" -Function ViExit# 设置 Ctrl+z 为撤销Set-PSReadLineKeyHandler -Key "Ctrl+z" -Function Undo# 设置向上键为后向搜索历史记录Set-PSReadLineKeyHandler -Key UpArrow -Function HistorySearchBackward# 设置向下键为前向搜索历史纪录Set-PSReadLineKeyHandler -Key DownArrow -Function HistorySearchForward# 一些PSReadline配置$PSReadLineOptions = @{    EditMode = "Windows"    HistoryNoDuplicates = $true    HistorySearchCursorMovesToEnd = $true    ShowToolTips = $true    Colors = @{        # 提示文字颜色，原来的颜色太浅了，我这里换了        Prediction = '#888888'    }}Set-PSReadLineOption @PSReadLineOptions#-------------------------------  Set Hot-keys END    -------------------------------<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="加入右键菜单"><a href="#加入右键菜单" class="headerlink" title="加入右键菜单"></a>加入右键菜单</h2><p>win+r 输入 regedit 计算机\HKEY_CLASSES_ROOT\Directory\Background\shell</p><p><code>shell</code> 下新建 <code>项</code> <code>wt</code></p><p><code>wt</code> <code>默认</code> 值 <code>Open Windows Terminal here</code></p><p><code>wt</code> 下 新建 <code>字符串值</code> <code>Icon</code> 值 <code>C:\Dev\PowerShell\assets\Powershell_av_colors.ico</code></p><p><code>wt</code> 下 新建 <code>项</code> <code>command</code> 值 <code>C:\Users\[你的用户名]\AppData\Local\Microsoft\WindowsApps\wt.exe</code></p><p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2x1b3NodWFpZGV2L2x1b3NodWFpZGV2LmdpdGh1Yi5pb0BpbWFnZS8yMDIwMDYwMzA5MjkxMzk2OC5wbmc?x-oss-process=image/format,png"><br><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jZG4uanNkZWxpdnIubmV0L2doL2x1b3NodWFpZGV2L2x1b3NodWFpZGV2LmdpdGh1Yi5pb0BpbWFnZS8yMDIwMDYwMzA5MjkxMzk3MC5wbmc?x-oss-process=image/format,png"></p><p>参考</p><p><a href="https://github.com/dracula/windows-terminal">https://github.com/dracula/windows-terminal</a></p><p><a href="https://docs.microsoft.com/zh-cn/windows/terminal/">https://docs.microsoft.com/zh-cn/windows/terminal/</a></p><p><a href="https://www.chuchur.com/article/windows-terminal-beautify">https://www.chuchur.com/article/windows-terminal-beautify</a></p><p><a href="https://zhuanlan.zhihu.com/p/137595941">https://zhuanlan.zhihu.com/p/137595941</a></p><p><a href="https://blog.csdn.net/zaoandly/article/details/106415873">https://blog.csdn.net/zaoandly/article/details/106415873</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java11 class FXMLLoaderHelper cannot access Utils because module javafx.graphics does not export</title>
      <link href="/2020/06/01/java11-class-fxmlloaderhelper-cannot-access-utils-because-module-javafx-graphics-does-not-export/"/>
      <url>/2020/06/01/java11-class-fxmlloaderhelper-cannot-access-utils-because-module-javafx-graphics-does-not-export/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-java"><code class="language-java">Exception in Application start methodjava<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>InvocationTargetExceptionCaused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>RuntimeException<span class="token operator">:</span> Exception in Application start method    at javafx<span class="token punctuation">.</span>graphics<span class="token operator">/</span>com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span>LauncherImpl<span class="token punctuation">.</span><span class="token function">launchApplication1</span><span class="token punctuation">(</span>LauncherImpl<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">900</span><span class="token punctuation">)</span>    at javafx<span class="token punctuation">.</span>graphics<span class="token operator">/</span>com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span>LauncherImpl<span class="token punctuation">.</span>lambda$launchApplication$<span class="token function">2</span><span class="token punctuation">(</span>LauncherImpl<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">195</span><span class="token punctuation">)</span>    at java<span class="token punctuation">.</span>base<span class="token operator">/</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Thread<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>Thread<span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">834</span><span class="token punctuation">)</span>Caused by<span class="token operator">:</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalAccessError<span class="token operator">:</span> <span class="token keyword">class</span> <span class="token class-name">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>fxml<span class="token punctuation">.</span>FXMLLoaderHelper</span> <span class="token punctuation">(</span>in unnamed module <span class="token annotation punctuation">@0x188c2166</span><span class="token punctuation">)</span> cannot access <span class="token keyword">class</span> <span class="token class-name">com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Utils</span> <span class="token punctuation">(</span>in module javafx<span class="token punctuation">.</span>graphics<span class="token punctuation">)</span> because module javafx<span class="token punctuation">.</span>graphics does not export com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>javafx<span class="token punctuation">.</span>util to unnamed module <span class="token annotation punctuation">@0x188c2166</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接启动 <code>App.class</code> 会报上面的错误</p><h2 id="新建一个-class"><a href="#新建一个-class" class="headerlink" title="新建一个 class"></a>新建一个 class</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Launcher</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        Application<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span>App<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 读取剪切板图片并保存图片到本地</title>
      <link href="/2020/05/31/javafx-du-qu-jian-qie-ban-tu-pian-bing-bao-cun-tu-pian-dao-ben-di/"/>
      <url>/2020/05/31/javafx-du-qu-jian-qie-ban-tu-pian-bing-bao-cun-tu-pian-dao-ben-di/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaFX-读取剪切板图片并保存图片到本地"><a href="#JavaFX-读取剪切板图片并保存图片到本地" class="headerlink" title="JavaFX 读取剪切板图片并保存图片到本地"></a>JavaFX 读取剪切板图片并保存图片到本地</h1><h2 id="使用-JavaFX-Clipboard-API"><a href="#使用-JavaFX-Clipboard-API" class="headerlink" title="使用 JavaFX Clipboard API"></a>使用 JavaFX Clipboard API</h2><pre class="line-numbers language-java"><code class="language-java">Clipboard clipboard <span class="token operator">=</span> Clipboard<span class="token punctuation">.</span><span class="token function">getSystemClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image image <span class="token operator">=</span> clipboard<span class="token punctuation">.</span><span class="token function">getImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>BufferedImage bImage <span class="token operator">=</span> SwingFXUtils<span class="token punctuation">.</span><span class="token function">fromFXImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"D:/image.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bImage<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>QQ 微信 有道云笔记 win10自带截图等 保存后的图片正常</p><p>Snipaste FastStone 截图, 看图工具中复制图片, 保存后的图片是透明的, 没有颜色</p><h2 id="使用-Awt-Clipboard-API"><a href="#使用-Awt-Clipboard-API" class="headerlink" title="使用 Awt Clipboard API"></a>使用 Awt Clipboard API</h2><pre class="line-numbers language-java"><code class="language-java">Image image <span class="token operator">=</span> <span class="token function">getImageFromClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"D:/image.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//转成jpg</span><span class="token comment" spellcheck="true">//BufferedImage bufferedImage = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_RGB);</span><span class="token comment" spellcheck="true">//转成png</span>BufferedImage bufferedImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">,</span> BufferedImage<span class="token punctuation">.</span>TYPE_INT_ARGB<span class="token punctuation">)</span><span class="token punctuation">;</span>Graphics2D g <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>g<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ImageIO.write(bufferedImage, "jpg", file);</span>ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">static</span> Image <span class="token function">getImageFromClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>    Clipboard sysc <span class="token operator">=</span> Toolkit<span class="token punctuation">.</span><span class="token function">getDefaultToolkit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSystemClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Transferable cc <span class="token operator">=</span> sysc<span class="token punctuation">.</span><span class="token function">getContents</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cc <span class="token operator">==</span> null<span class="token punctuation">)</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>cc<span class="token punctuation">.</span><span class="token function">isDataFlavorSupported</span><span class="token punctuation">(</span>DataFlavor<span class="token punctuation">.</span>imageFlavor<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>Image<span class="token punctuation">)</span> cc<span class="token punctuation">.</span><span class="token function">getTransferData</span><span class="token punctuation">(</span>DataFlavor<span class="token punctuation">.</span>imageFlavor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> null<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>测试的这些软件都能正常保存</p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Effect</title>
      <link href="/2020/05/30/javafx-effect/"/>
      <url>/2020/05/30/javafx-effect/</url>
      
        <content type="html"><![CDATA[<h1 id="Effect"><a href="#Effect" class="headerlink" title="Effect"></a>Effect</h1><h2 id="DropShadow"><a href="#DropShadow" class="headerlink" title="DropShadow"></a>DropShadow</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424490.png"></p><h2 id="InnerShadow"><a href="#InnerShadow" class="headerlink" title="InnerShadow"></a>InnerShadow</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424492.png"></p><h2 id="Shadow"><a href="#Shadow" class="headerlink" title="Shadow"></a>Shadow</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424494.png"></p><h2 id="BoxBlur"><a href="#BoxBlur" class="headerlink" title="BoxBlur"></a>BoxBlur</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424496.png"></p><h2 id="GaussianBlur"><a href="#GaussianBlur" class="headerlink" title="GaussianBlur"></a>GaussianBlur</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424498.png"></p><h2 id="MotionBlur"><a href="#MotionBlur" class="headerlink" title="MotionBlur"></a>MotionBlur</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424500.png"></p><h2 id="Bloom"><a href="#Bloom" class="headerlink" title="Bloom"></a>Bloom</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424503.png"></p><h2 id="Glow"><a href="#Glow" class="headerlink" title="Glow"></a>Glow</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424506.png"></p><h2 id="SepiaTone"><a href="#SepiaTone" class="headerlink" title="SepiaTone"></a>SepiaTone</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424508.png"></p><h2 id="Reflection"><a href="#Reflection" class="headerlink" title="Reflection"></a>Reflection</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424511.png"></p><h2 id="ColorAdjust"><a href="#ColorAdjust" class="headerlink" title="ColorAdjust"></a>ColorAdjust</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424484.png"></p><h2 id="Lighting-amp-Shadow"><a href="#Lighting-amp-Shadow" class="headerlink" title="Lighting&amp;Shadow"></a>Lighting&amp;Shadow</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531141424487.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 背景填充 线性渐变  径向渐变</title>
      <link href="/2020/05/30/javafx-bei-jing-tian-chong-xian-xing-jian-bian-jing-xiang-jian-bian/"/>
      <url>/2020/05/30/javafx-bei-jing-tian-chong-xian-xing-jian-bian-jing-xiang-jian-bian/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531140504912.png"></p><pre class="line-numbers language-java"><code class="language-java">StackPane stackPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setPrefSize</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// x|y 填充起始坐标</span><span class="token comment" spellcheck="true">// width|height proportional 为true 代表缩放比例, 为false 代表实际尺寸</span>ImagePattern imagePattern <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImagePattern</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Background</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BackgroundFill</span><span class="token punctuation">(</span>imagePattern<span class="token punctuation">,</span> CornerRadii<span class="token punctuation">.</span>EMPTY<span class="token punctuation">,</span> Insets<span class="token punctuation">.</span>EMPTY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531140504919.png"></p><pre class="line-numbers language-java"><code class="language-java">Circle circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>circle<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImagePattern</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX CSS</title>
      <link href="/2020/05/30/javafx-css/"/>
      <url>/2020/05/30/javafx-css/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531140504910.png"></p><h2 id="编写-CSS"><a href="#编写-CSS" class="headerlink" title="编写 CSS"></a>编写 CSS</h2><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token id">#root</span> </span><span class="token punctuation">{</span>  <span class="token property">-fx-background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#ccc</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.custom</span> </span><span class="token punctuation">{</span>  <span class="token property">-fx-background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#088</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.label</span> </span><span class="token punctuation">{</span>  <span class="token property">-fx-text-fill</span><span class="token punctuation">:</span> <span class="token hexcode">#0af</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.label</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>  <span class="token property">-fx-text-fill</span><span class="token punctuation">:</span> <span class="token hexcode">#f08</span><span class="token punctuation">;</span>  <span class="token property">-fx-font-size</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Java-代码加载-CSS"><a href="#Java-代码加载-CSS" class="headerlink" title="Java 代码加载 CSS"></a>Java 代码加载 CSS</h2><pre class="line-numbers language-java"><code class="language-java">Scene scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>URL sampleCss <span class="token operator">=</span> <span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResource</span><span class="token punctuation">(</span><span class="token string">"/css/sample.css"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scene<span class="token punctuation">.</span><span class="token function">getStylesheets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>sampleCss<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="FXML-添加-CSS"><a href="#FXML-添加-CSS" class="headerlink" title="FXML 添加 CSS"></a>FXML 添加 CSS</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>HBox</span> <span class="token attr-name"><span class="token namespace">fx:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span> <span class="token attr-name">stylesheets</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/css/sample.css<span class="token punctuation">"</span></span> <span class="token attr-name">spacing</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">alignment</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">prefHeight</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>400<span class="token punctuation">"</span></span> <span class="token attr-name">prefWidth</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://javafx.com/javafx/8<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>fx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://javafx.com/fxml/1<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">fx:</span>controller</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.lsdev.sample.Controller<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name"><span class="token namespace">fx:</span>id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%hello<span class="token punctuation">"</span></span> <span class="token attr-name">styleClass</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>custom<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Label1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Label2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>HBox</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 边框&amp;背景</title>
      <link href="/2020/05/30/javafx-bian-kuang-bei-jing/"/>
      <url>/2020/05/30/javafx-bian-kuang-bei-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="边框-amp-背景"><a href="#边框-amp-背景" class="headerlink" title="边框&amp;背景"></a>边框&amp;背景</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531140504922.png"></p><pre class="line-numbers language-java"><code class="language-java">Background background <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Background</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BackgroundFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#088"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CornerRadii</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Insets</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setBackground</span><span class="token punctuation">(</span>background<span class="token punctuation">)</span><span class="token punctuation">;</span>Border border <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Border</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BorderStroke</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#0ff"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> BorderStrokeStyle<span class="token punctuation">.</span>SOLID<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CornerRadii</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BorderWidths</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span>border<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Style"><a href="#Style" class="headerlink" title="Style"></a>Style</h2><pre class="line-numbers language-java"><code class="language-java">button<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span>    <span class="token string">"-fx-font-size:20;"</span> <span class="token operator">+</span>    <span class="token string">"-fx-text-fill: #fff;"</span> <span class="token operator">+</span>    <span class="token string">"-fx-background-color: #088;"</span> <span class="token operator">+</span>    <span class="token string">"-fx-background-radius:10;"</span> <span class="token operator">+</span>    <span class="token string">"-fx-border-style: solid;"</span> <span class="token operator">+</span>    <span class="token string">"-fx-border-color: #0ff;"</span> <span class="token operator">+</span>    <span class="token string">" -fx-border-width: 3;"</span> <span class="token operator">+</span>    <span class="token string">" -fx-border-radius: 10"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/JavaFX/20200531140504915.png"></p><pre class="line-numbers language-java"><code class="language-java">VBox root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #0c8;-fx-background-radius: 20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Insets</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>TextField textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>StackPane stackPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setPrefHeight</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #88f"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>Node<span class="token operator">></span> children <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>children<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> textField<span class="token punctuation">,</span> stackPane<span class="token punctuation">)</span><span class="token punctuation">;</span>Scene scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>scene<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#0000"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">initStyle</span><span class="token punctuation">(</span>StageStyle<span class="token punctuation">.</span>TRANSPARENT<span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">getIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image\\portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX Stage</title>
      <link href="/2020/05/29/javafx-stage/"/>
      <url>/2020/05/29/javafx-stage/</url>
      
        <content type="html"><![CDATA[<h1 id="Stage"><a href="#Stage" class="headerlink" title="Stage"></a>Stage</h1><h2 id="尺寸"><a href="#尺寸" class="headerlink" title="尺寸"></a>尺寸</h2><pre class="line-numbers language-java"><code class="language-java">primaryStage<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setMaxWidth</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setMaxHeight</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setMinWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setMinHeight</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不可改变窗口大小</span>primaryStage<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取宽高"><a href="#获取宽高" class="headerlink" title="获取宽高"></a>获取宽高</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//show之后获取</span><span class="token keyword">double</span> width <span class="token operator">=</span> primaryStage<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> height <span class="token operator">=</span> primaryStage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//标题</span>primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"JavaFX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//图标</span>primaryStage<span class="token punctuation">.</span><span class="token function">getIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image\\portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//启动最小化</span>primaryStage<span class="token punctuation">.</span><span class="token function">setIconified</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//启动最大化</span>primaryStage<span class="token punctuation">.</span><span class="token function">setMaximized</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//全屏 需要设置Scene</span>primaryStage<span class="token punctuation">.</span><span class="token function">setFullScreen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>FlowPane root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FlowPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//透明度</span>primaryStage<span class="token punctuation">.</span><span class="token function">setOpacity</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//置顶</span>primaryStage<span class="token punctuation">.</span><span class="token function">setAlwaysOnTop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//初始位置</span>primaryStage<span class="token punctuation">.</span><span class="token function">setX</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>primaryStage<span class="token punctuation">.</span><span class="token function">setY</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置窗口Style</span>primaryStage<span class="token punctuation">.</span><span class="token function">initStyle</span><span class="token punctuation">(</span>StageStyle<span class="token punctuation">.</span>UNDECORATED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示</span>primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置模态</span>Stage stage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Stage stage2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage2<span class="token punctuation">.</span><span class="token function">initOwner</span><span class="token punctuation">(</span>stage<span class="token punctuation">)</span><span class="token punctuation">;</span>stage2<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage2<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//stage2 相对于 stage</span>stage2<span class="token punctuation">.</span><span class="token function">initModality</span><span class="token punctuation">(</span>Modality<span class="token punctuation">.</span>WINDOW_MODAL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//相对于整个应用</span>stage2<span class="token punctuation">.</span><span class="token function">initModality</span><span class="token punctuation">(</span>Modality<span class="token punctuation">.</span>APPLICATION_MODAL<span class="token punctuation">)</span><span class="token punctuation">;</span>stage2<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//关闭</span>primaryStage<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="监听"><a href="#监听" class="headerlink" title="监听"></a>监听</h2><h3 id="监听窗口大小改变"><a href="#监听窗口大小改变" class="headerlink" title="监听窗口大小改变"></a>监听窗口大小改变</h3><pre class="line-numbers language-java"><code class="language-java">primaryStage<span class="token punctuation">.</span><span class="token function">widthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="监听位置改变"><a href="#监听位置改变" class="headerlink" title="监听位置改变"></a>监听位置改变</h3><pre class="line-numbers language-java"><code class="language-java">primaryStage<span class="token punctuation">.</span><span class="token function">xProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局操作</title>
      <link href="/2020/05/29/javafx-bu-ju-cao-zuo/"/>
      <url>/2020/05/29/javafx-bu-ju-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="布局操作"><a href="#布局操作" class="headerlink" title="布局操作"></a>布局操作</h1><h2 id="添加子控件"><a href="#添加子控件" class="headerlink" title="添加子控件"></a>添加子控件</h2><pre class="line-numbers language-java"><code class="language-java">root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="监听子控件改变"><a href="#监听子控件改变" class="headerlink" title="监听子控件改变"></a>监听子控件改变</h2><pre class="line-numbers language-java"><code class="language-java">children<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ListChangeListener</span><span class="token operator">&lt;</span>Node<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onChanged</span><span class="token punctuation">(</span>Change<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Node</span><span class="token operator">></span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"c = "</span> <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="隐藏显示"><a href="#隐藏显示" class="headerlink" title="隐藏显示"></a>隐藏显示</h2><pre class="line-numbers language-java"><code class="language-java">button<span class="token punctuation">.</span><span class="token function">setManaged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Visible/Gone</span>button<span class="token punctuation">.</span><span class="token function">setVisible</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Visible/inVisible</span>button<span class="token punctuation">.</span><span class="token function">setOpacity</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//透明度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 尺寸&amp;边界&amp;位置&amp;坐标</title>
      <link href="/2020/05/29/javafx-chi-cun-bian-jie-wei-zhi-zuo-biao/"/>
      <url>/2020/05/29/javafx-chi-cun-bian-jie-wei-zhi-zuo-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="尺寸-amp-边界-amp-位置-amp-坐标"><a href="#尺寸-amp-边界-amp-位置-amp-坐标" class="headerlink" title="尺寸&amp;边界&amp;位置&amp;坐标"></a>尺寸&amp;边界&amp;位置&amp;坐标</h1><pre class="line-numbers language-java"><code class="language-java">min max preButton button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"ButtonButtonButtonButton"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setMinWidth</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setMaxWidth</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//父组件提供的宽度</span><span class="token comment" spellcheck="true">//类似 wrap_content</span>button<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span>Button<span class="token punctuation">.</span>USE_COMPUTED_SIZE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Control.USE_COMPUTED_SIZE 类似 wrap_content</span><span class="token comment" spellcheck="true">//Control.USE_PREF_SIZE 固定值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="位置-amp-坐标"><a href="#位置-amp-坐标" class="headerlink" title="位置&amp;坐标"></a>位置&amp;坐标</h2><pre class="line-numbers language-java"><code class="language-java">button<span class="token punctuation">.</span><span class="token function">setLayoutX</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setLayoutY</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//父组件中的坐标</span><span class="token keyword">double</span> layoutX <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">getLayoutX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> layoutY <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">getLayoutY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前组件边界框范围, 不包含 Effect</span>Bounds layoutBounds <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">getLayoutBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前组件宽高</span><span class="token keyword">double</span> width <span class="token operator">=</span> layoutBounds<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> height <span class="token operator">=</span> layoutBounds<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左上角X</span><span class="token keyword">double</span> minX <span class="token operator">=</span> layoutBounds<span class="token punctuation">.</span><span class="token function">getMinX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//左上角Y</span><span class="token keyword">double</span> minY <span class="token operator">=</span> layoutBounds<span class="token punctuation">.</span><span class="token function">getMinY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右下角X</span><span class="token keyword">double</span> maxX <span class="token operator">=</span> layoutBounds<span class="token punctuation">.</span><span class="token function">getMaxX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//右下角Y</span><span class="token keyword">double</span> maxY <span class="token operator">=</span> layoutBounds<span class="token punctuation">.</span><span class="token function">getMaxY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前坐标转父坐标</span>Point2D localToParent <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">localToParent</span><span class="token punctuation">(</span>minX<span class="token punctuation">,</span> minY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> parentX <span class="token operator">=</span> localToParent<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> parentY <span class="token operator">=</span> localToParent<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前坐标转场景坐标</span>Point2D localToScene <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">localToScene</span><span class="token punctuation">(</span>minX<span class="token punctuation">,</span> minY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> sceneX <span class="token operator">=</span> localToScene<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> sceneY <span class="token operator">=</span> localToScene<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前坐标转屏幕坐标</span>Point2D localToScreen <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">localToScreen</span><span class="token punctuation">(</span>minX<span class="token punctuation">,</span> minY<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> screenX <span class="token operator">=</span> localToScreen<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">double</span> screenY <span class="token operator">=</span> localToScreen<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="边界"><a href="#边界" class="headerlink" title="边界"></a>边界</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//当前组件边界框范围, 不包含 Effect</span>Bounds layoutBounds <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">getLayoutBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前组件包含 Effect 的边界框范围</span>Bounds boundsInLocal <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">getBoundsInLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前组件在父组件的边界框范围</span>Bounds boundsInParent <span class="token operator">=</span> button<span class="token punctuation">.</span><span class="token function">getBoundsInParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Hyperlink WebView HTMLEditor</title>
      <link href="/2020/05/28/javafx-kong-jian-hyperlink-webview-htmleditor/"/>
      <url>/2020/05/28/javafx-kong-jian-hyperlink-webview-htmleditor/</url>
      
        <content type="html"><![CDATA[<h1 id="Hyperlink-WebView-HTMLEditor"><a href="#Hyperlink-WebView-HTMLEditor" class="headerlink" title="Hyperlink WebView HTMLEditor"></a>Hyperlink WebView HTMLEditor</h1><h2 id="Hyperlink"><a href="#Hyperlink" class="headerlink" title="Hyperlink"></a>Hyperlink</h2><pre class="line-numbers language-java"><code class="language-java">Hyperlink hyperlink <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hyperlink</span><span class="token punctuation">(</span><span class="token string">"www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hyperlink<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        HostServices hostServices <span class="token operator">=</span> <span class="token function">getHostServices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        hostServices<span class="token punctuation">.</span><span class="token function">showDocument</span><span class="token punctuation">(</span>hyperlink<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205741.png"></p><pre class="line-numbers language-java"><code class="language-java">WebView webView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>WebEngine engine <span class="token operator">=</span> webView<span class="token punctuation">.</span><span class="token function">getEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>engine<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>webView<span class="token punctuation">.</span><span class="token function">prefWidthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">widthProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>webView<span class="token punctuation">.</span><span class="token function">prefHeightProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token function">heightProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//页面历史</span>WebHistory history <span class="token operator">=</span> engine<span class="token punctuation">.</span><span class="token function">getHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>Entry<span class="token operator">></span> historyEntries <span class="token operator">=</span> history<span class="token punctuation">.</span><span class="token function">getEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//前进</span>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//后退</span>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HTMLEditor"><a href="#HTMLEditor" class="headerlink" title="HTMLEditor"></a>HTMLEditor</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205752.png"></p><pre class="line-numbers language-java"><code class="language-java">HTMLEditor htmlEditor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HTMLEditor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>htmlEditor<span class="token punctuation">.</span><span class="token function">setPrefSize</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取内容</span>String htmlText <span class="token operator">=</span> htmlEditor<span class="token punctuation">.</span><span class="token function">getHtmlText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Dialog</title>
      <link href="/2020/05/28/javafx-kong-jian-dialog/"/>
      <url>/2020/05/28/javafx-kong-jian-dialog/</url>
      
        <content type="html"><![CDATA[<h1 id="Dialog"><a href="#Dialog" class="headerlink" title="Dialog"></a>Dialog</h1><h2 id="Dialog-1"><a href="#Dialog-1" class="headerlink" title="Dialog"></a>Dialog</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205834.png"></p><pre class="line-numbers language-java"><code class="language-java">Dialog<span class="token operator">&lt;</span>ButtonType<span class="token operator">></span> dialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dialog</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialog<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialog<span class="token punctuation">.</span><span class="token function">setHeaderText</span><span class="token punctuation">(</span><span class="token string">"HeaderText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialog<span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"ContentText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialog<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>DialogPane dialogPane <span class="token operator">=</span> dialog<span class="token punctuation">.</span><span class="token function">getDialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">setPrefSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>ButtonType<span class="token operator">></span> buttonTypes <span class="token operator">=</span> dialogPane<span class="token punctuation">.</span><span class="token function">getButtonTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>buttonTypes<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> ButtonType<span class="token punctuation">.</span>APPLY<span class="token punctuation">,</span> ButtonType<span class="token punctuation">.</span>CANCEL<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnOk <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> dialogPane<span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnApply <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> dialogPane<span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>APPLY<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnCancel <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> dialogPane<span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>CANCEL<span class="token punctuation">)</span><span class="token punctuation">;</span>btnOk<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>btnApply<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Apply"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>btnCancel<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Cancel"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialog<span class="token punctuation">.</span><span class="token function">setOnCloseRequest</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>DialogEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>DialogEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"OnCloseRequest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*dialog.showAndWait()        .filter(response -> response == ButtonType.OK)        .ifPresent(response -> System.out.println("doAction"));        */</span>dialog<span class="token punctuation">.</span><span class="token function">showAndWait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token operator">&lt;</span>ButtonType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span>ButtonType buttonType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> buttonType <span class="token operator">==</span> ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Consumer</span><span class="token operator">&lt;</span>ButtonType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">accept</span><span class="token punctuation">(</span>ButtonType buttonType<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"doAction"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"阻塞的代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"不会阻塞的代码"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//如果 Dialog&lt;> 泛型不是ButtonType 需要设置 ResultConverter</span><span class="token comment" spellcheck="true">//dialog.setResultConverter(new Callback&lt;ButtonType, ButtonType>() {</span><span class="token comment" spellcheck="true">//    @Override</span><span class="token comment" spellcheck="true">//    public String call(ButtonType param) {</span><span class="token comment" spellcheck="true">//        return "";</span><span class="token comment" spellcheck="true">//    }</span><span class="token comment" spellcheck="true">//});</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置左上角小图标"><a href="#设置左上角小图标" class="headerlink" title="设置左上角小图标"></a>设置左上角小图标</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205908.png"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//设置左上角小图标</span>Stage stage <span class="token operator">=</span> <span class="token punctuation">(</span>Stage<span class="token punctuation">)</span> dialog<span class="token punctuation">.</span><span class="token function">getDialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getScene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">getIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/stash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>//使用与它正在运行的应用程序相同的图标<br><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205940.png"></p><pre class="line-numbers language-java"><code class="language-java">dialog<span class="token punctuation">.</span><span class="token function">initOwner</span><span class="token punctuation">(</span>primaryStage<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205959.png"></p><pre class="line-numbers language-java"><code class="language-java">dialog<span class="token punctuation">.</span><span class="token function">initStyle</span><span class="token punctuation">(</span>StageStyle<span class="token punctuation">.</span>UTILITY<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Alert"><a href="#Alert" class="headerlink" title="Alert"></a>Alert</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528210052.png"></p><pre class="line-numbers language-java"><code class="language-java">Alert alert <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Alert</span><span class="token punctuation">(</span>AlertType<span class="token punctuation">.</span>WARNING<span class="token punctuation">)</span><span class="token punctuation">;</span>alert<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>alert<span class="token punctuation">.</span><span class="token function">setHeaderText</span><span class="token punctuation">(</span><span class="token string">"HeaderText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>alert<span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"ContentText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnOk <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> alert<span class="token punctuation">.</span><span class="token function">getDialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>btnOk<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>alert<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ChoiceDialog"><a href="#ChoiceDialog" class="headerlink" title="ChoiceDialog"></a>ChoiceDialog</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528210115.png"></p><pre class="line-numbers language-java"><code class="language-java">ObservableList<span class="token operator">&lt;</span>String<span class="token operator">></span> itemStrings <span class="token operator">=</span> FXCollections<span class="token punctuation">.</span><span class="token function">observableArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    itemStrings<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"item "</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>ChoiceDialog<span class="token operator">&lt;</span>String<span class="token operator">></span> choiceDialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChoiceDialog</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceDialog<span class="token punctuation">.</span><span class="token function">setSelectedItem</span><span class="token punctuation">(</span><span class="token string">"item 3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceDialog<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>itemStrings<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnOk <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> choiceDialog<span class="token punctuation">.</span><span class="token function">getDialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>btnOk<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Ok"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceDialog<span class="token punctuation">.</span><span class="token function">selectedItemProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TextInputDialog"><a href="#TextInputDialog" class="headerlink" title="TextInputDialog"></a>TextInputDialog</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528210146.png"></p><pre class="line-numbers language-java"><code class="language-java">TextInputDialog textInputDialog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextInputDialog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textInputDialog<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"Title"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textInputDialog<span class="token punctuation">.</span><span class="token function">setHeaderText</span><span class="token punctuation">(</span><span class="token string">"HeaderText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textInputDialog<span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"ContentText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnOk <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> textInputDialog<span class="token punctuation">.</span><span class="token function">getDialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>btnOk<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//输入框中的文本</span>        String text <span class="token operator">=</span> textInputDialog<span class="token punctuation">.</span><span class="token function">getEditor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置左上角小图标</span>Stage stage <span class="token operator">=</span> <span class="token punctuation">(</span>Stage<span class="token punctuation">)</span> textInputDialog<span class="token punctuation">.</span><span class="token function">getDialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getScene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">getIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/stash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textInputDialog<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 ComboBox</title>
      <link href="/2020/05/28/javafx-kong-jian-combobox/"/>
      <url>/2020/05/28/javafx-kong-jian-combobox/</url>
      
        <content type="html"><![CDATA[<h1 id="ComboBox"><a href="#ComboBox" class="headerlink" title="ComboBox"></a>ComboBox</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205606.png"></p><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><pre class="line-numbers language-java"><code class="language-java">ComboBox<span class="token operator">&lt;</span>String<span class="token operator">></span> comboBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboBox</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token string">"item1"</span><span class="token punctuation">,</span> <span class="token string">"item2"</span><span class="token punctuation">,</span> <span class="token string">"item3"</span><span class="token punctuation">,</span> <span class="token string">"item4"</span><span class="token punctuation">,</span> <span class="token string">"item5"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//数据源为空时显示</span>comboBox<span class="token punctuation">.</span><span class="token function">setPlaceholder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Placeholder"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置可编辑</span>comboBox<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">setPromptText</span><span class="token punctuation">(</span><span class="token string">"PromptText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置可见行数, 超过显示滚动条</span>comboBox<span class="token punctuation">.</span><span class="token function">setVisibleRowCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">editorProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>TextField<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TextField</span><span class="token operator">></span> observable<span class="token punctuation">,</span> TextField oldValue<span class="token punctuation">,</span> TextField newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedItemProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h2><pre class="line-numbers language-java"><code class="language-java">Student student1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Student1"</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Student student2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Student2"</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Student student3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Student3"</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ComboBox<span class="token operator">&lt;</span>Student<span class="token operator">></span> comboBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ComboBox</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>student1<span class="token punctuation">,</span> student2<span class="token punctuation">,</span> student3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//数据源为空时显示</span>comboBox<span class="token punctuation">.</span><span class="token function">setPlaceholder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Placeholder"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>student2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置可编辑</span>comboBox<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">setConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringConverter</span><span class="token operator">&lt;</span>Student<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span>Student object<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> object<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> object<span class="token punctuation">.</span>id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Student <span class="token function">fromString</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//接收输入框的值</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"string = "</span> <span class="token operator">+</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>        comboBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span>string<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>comboBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedItemProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Student<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Student</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Student oldValue<span class="token punctuation">,</span> Student newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义-Item"><a href="#自定义-Item" class="headerlink" title="自定义 Item"></a>自定义 Item</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205620.png"></p><pre class="line-numbers language-java"><code class="language-java">comboBox<span class="token punctuation">.</span><span class="token function">setCellFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token operator">&lt;</span>ListView<span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">,</span> ListCell<span class="token operator">&lt;</span>String<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ListCell<span class="token operator">&lt;</span>String<span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>ListView<span class="token operator">&lt;</span>String<span class="token operator">></span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListCell</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">updateItem</span><span class="token punctuation">(</span>String item<span class="token punctuation">,</span> <span class="token keyword">boolean</span> empty<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">updateItem</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> empty<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//this 为 ListCell 子类</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>empty<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-text-fill: #0aa"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\stash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205639.png"></p><pre class="line-numbers language-java"><code class="language-java">comboBox<span class="token punctuation">.</span><span class="token function">setCellFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token operator">&lt;</span>ListView<span class="token operator">&lt;</span>Student<span class="token operator">></span><span class="token punctuation">,</span> ListCell<span class="token operator">&lt;</span>Student<span class="token operator">>></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ListCell<span class="token operator">&lt;</span>Student<span class="token operator">></span> <span class="token function">call</span><span class="token punctuation">(</span>ListView<span class="token operator">&lt;</span>Student<span class="token operator">></span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ListCell</span><span class="token operator">&lt;</span>Student<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">updateItem</span><span class="token punctuation">(</span>Student item<span class="token punctuation">,</span> <span class="token keyword">boolean</span> empty<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">updateItem</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> empty<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>empty<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//可以直接获取Converter中的toString()结果</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>comboBox<span class="token punctuation">.</span><span class="token function">getConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setTextFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#088"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token function">setText</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token function">setGraphic</span><span class="token punctuation">(</span>null<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改-Item-值刷新列表"><a href="#修改-Item-值刷新列表" class="headerlink" title="修改 Item 值刷新列表"></a>修改 Item 值刷新列表</h2><pre class="line-numbers language-java"><code class="language-java">ObservableList<span class="token operator">&lt;</span>Student<span class="token operator">></span> items <span class="token operator">=</span> comboBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>items<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"修改后"</span><span class="token punctuation">;</span>SingleSelectionModel<span class="token operator">&lt;</span>Student<span class="token operator">></span> selectionModel <span class="token operator">=</span> comboBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>selectionModel<span class="token punctuation">.</span><span class="token function">clearSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>selectionModel<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 ChoiceBox</title>
      <link href="/2020/05/28/javafx-kong-jian-choicebox/"/>
      <url>/2020/05/28/javafx-kong-jian-choicebox/</url>
      
        <content type="html"><![CDATA[<h1 id="ChoiceBox"><a href="#ChoiceBox" class="headerlink" title="ChoiceBox"></a>ChoiceBox</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200528205309.png"></p><h2 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h2><pre class="line-numbers language-java"><code class="language-java">ChoiceBox<span class="token operator">&lt;</span>String<span class="token operator">></span> choiceBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChoiceBox</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token string">"item1"</span><span class="token punctuation">,</span> <span class="token string">"item2"</span><span class="token punctuation">,</span> <span class="token string">"item3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置选中</span>choiceBox<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token string">"item1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置选中</span>choiceBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">"item3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置选择监听</span>choiceBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedIndexProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceBox<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedItemProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义对象"><a href="#自定义对象" class="headerlink" title="自定义对象"></a>自定义对象</h2><pre class="line-numbers language-java"><code class="language-java">ChoiceBox<span class="token operator">&lt;</span>Student<span class="token operator">></span> choiceBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ChoiceBox</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceBox<span class="token punctuation">.</span><span class="token function">setConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringConverter</span><span class="token operator">&lt;</span>Student<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span>Student object<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> object<span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Student <span class="token function">fromString</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"string = "</span> <span class="token operator">+</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>choiceBox<span class="token punctuation">.</span><span class="token function">getItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>student1<span class="token punctuation">,</span> student2<span class="token punctuation">,</span> student3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 ColorPicker</title>
      <link href="/2020/05/27/javafx-kong-jian-colorpicker/"/>
      <url>/2020/05/27/javafx-kong-jian-colorpicker/</url>
      
        <content type="html"><![CDATA[<h1 id="ColorPicker"><a href="#ColorPicker" class="headerlink" title="ColorPicker"></a>ColorPicker</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526231934.png"></p><pre class="line-numbers language-java"><code class="language-java">ColorPicker colorPicker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置Color</span>colorPicker<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#00cccc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取Color</span>Color color <span class="token operator">=</span> colorPicker<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//监听颜色改变</span>colorPicker<span class="token punctuation">.</span><span class="token function">valueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Color<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Color</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Color oldValue<span class="token punctuation">,</span> Color newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        root<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color:#"</span> <span class="token operator">+</span> newValue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 ButtonBar</title>
      <link href="/2020/05/27/javafx-kong-jian-buttonbar/"/>
      <url>/2020/05/27/javafx-kong-jian-buttonbar/</url>
      
        <content type="html"><![CDATA[<h1 id="ButtonBar"><a href="#ButtonBar" class="headerlink" title="ButtonBar"></a>ButtonBar</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526231855.png"></p><pre class="line-numbers language-java"><code class="language-java">ButtonBar buttonBar <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ButtonBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//排序规则</span>buttonBar<span class="token punctuation">.</span><span class="token function">setButtonOrder</span><span class="token punctuation">(</span>ButtonBar<span class="token punctuation">.</span>BUTTON_ORDER_NONE<span class="token punctuation">)</span><span class="token punctuation">;</span>Button apply <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"APPLY"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button okDone <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"DONE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button cancelClose <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"CANCEL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ButtonBar<span class="token punctuation">.</span><span class="token function">setButtonData</span><span class="token punctuation">(</span>apply<span class="token punctuation">,</span> ButtonData<span class="token punctuation">.</span>APPLY<span class="token punctuation">)</span><span class="token punctuation">;</span>ButtonBar<span class="token punctuation">.</span><span class="token function">setButtonData</span><span class="token punctuation">(</span>okDone<span class="token punctuation">,</span> ButtonData<span class="token punctuation">.</span>OK_DONE<span class="token punctuation">)</span><span class="token punctuation">;</span>ButtonBar<span class="token punctuation">.</span><span class="token function">setButtonData</span><span class="token punctuation">(</span>cancelClose<span class="token punctuation">,</span> ButtonData<span class="token punctuation">.</span>CANCEL_CLOSE<span class="token punctuation">)</span><span class="token punctuation">;</span>buttonBar<span class="token punctuation">.</span><span class="token function">getButtons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>apply<span class="token punctuation">,</span> okDone<span class="token punctuation">,</span> cancelClose<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 DatePicker</title>
      <link href="/2020/05/27/javafx-kong-jian-datepicker/"/>
      <url>/2020/05/27/javafx-kong-jian-datepicker/</url>
      
        <content type="html"><![CDATA[<h1 id="DatePicker"><a href="#DatePicker" class="headerlink" title="DatePicker"></a>DatePicker</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526231725.png"></p><pre class="line-numbers language-java"><code class="language-java">DatePicker datePicker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DatePicker</span><span class="token punctuation">(</span>LocalDate<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>datePicker<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//选择监听</span>datePicker<span class="token punctuation">.</span><span class="token function">valueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>LocalDate<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">LocalDate</span><span class="token operator">></span> observable<span class="token punctuation">,</span> LocalDate oldValue<span class="token punctuation">,</span> LocalDate newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> year <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> month <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> day <span class="token operator">=</span> newValue<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"year = "</span> <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">", month = "</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">", day = "</span> <span class="token operator">+</span> day<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Pagination</title>
      <link href="/2020/05/27/javafx-kong-jian-pagination/"/>
      <url>/2020/05/27/javafx-kong-jian-pagination/</url>
      
        <content type="html"><![CDATA[<h1 id="Pagination"><a href="#Pagination" class="headerlink" title="Pagination"></a>Pagination</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526231701.png"></p><pre class="line-numbers language-java"><code class="language-java">Pagination pagination <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Pagination</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pagination<span class="token punctuation">.</span><span class="token function">setPageCount</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pagination<span class="token punctuation">.</span><span class="token function">setMaxPageIndicatorCount</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pagination<span class="token punctuation">.</span><span class="token function">setCurrentPageIndex</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置样式</span>pagination<span class="token punctuation">.</span><span class="token function">getStyleClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Pagination<span class="token punctuation">.</span>STYLE_CLASS_BULLET<span class="token punctuation">)</span><span class="token punctuation">;</span>pagination<span class="token punctuation">.</span><span class="token function">setPageFactory</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Callback</span><span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Node<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Node <span class="token function">call</span><span class="token punctuation">(</span>Integer param<span class="token punctuation">)</span> <span class="token punctuation">{</span>        Label label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"页面"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>param <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setTextFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#0cc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #ccc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setPrefHeight</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> label<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Separator</title>
      <link href="/2020/05/27/javafx-kong-jian-separator/"/>
      <url>/2020/05/27/javafx-kong-jian-separator/</url>
      
        <content type="html"><![CDATA[<h1 id="Separator"><a href="#Separator" class="headerlink" title="Separator"></a>Separator</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526231618.png"></p><pre class="line-numbers language-java"><code class="language-java">Separator separator1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Separator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Separator separator2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Separator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Button button4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>HBox hBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span>button3<span class="token punctuation">,</span> separator2<span class="token punctuation">,</span> button4<span class="token punctuation">)</span><span class="token punctuation">;</span>separator2<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>Orientation<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span>separator2<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>separator2<span class="token punctuation">.</span><span class="token function">setValignment</span><span class="token punctuation">(</span>VPos<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>separator2<span class="token punctuation">.</span><span class="token function">setHalignment</span><span class="token punctuation">(</span>HPos<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Slider</title>
      <link href="/2020/05/26/javafx-kong-jian-slider/"/>
      <url>/2020/05/26/javafx-kong-jian-slider/</url>
      
        <content type="html"><![CDATA[<h1 id="Slider"><a href="#Slider" class="headerlink" title="Slider"></a>Slider</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526225242.png"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//min max value</span>Slider slider <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Slider</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置当前值</span>slider<span class="token punctuation">.</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>slider<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>slider<span class="token punctuation">.</span><span class="token function">setMinWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>slider<span class="token punctuation">.</span><span class="token function">setMaxWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示标尺</span>slider<span class="token punctuation">.</span><span class="token function">setShowTickMarks</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示文字</span>slider<span class="token punctuation">.</span><span class="token function">setShowTickLabels</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否对齐到标尺</span>slider<span class="token punctuation">.</span><span class="token function">setSnapToTicks</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//TickLabels 间隔</span>slider<span class="token punctuation">.</span><span class="token function">setMajorTickUnit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置键盘控制步长</span>slider<span class="token punctuation">.</span><span class="token function">setBlockIncrement</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//垂直显示</span>slider<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>Orientation<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//更改标尺文本</span>slider<span class="token punctuation">.</span><span class="token function">setLabelFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringConverter</span><span class="token operator">&lt;</span>Double<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span>Double object<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> object<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"X"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Double <span class="token function">fromString</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//变更监听</span>slider<span class="token punctuation">.</span><span class="token function">valueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Spinner</title>
      <link href="/2020/05/26/javafx-kong-jian-spinner/"/>
      <url>/2020/05/26/javafx-kong-jian-spinner/</url>
      
        <content type="html"><![CDATA[<h1 id="Spinner"><a href="#Spinner" class="headerlink" title="Spinner"></a>Spinner</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526225749.png"></p><p>样式</p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526225805.png"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//最小, 最大, 默认值, 步长</span>Spinner<span class="token operator">&lt;</span>Integer<span class="token operator">></span> spinner1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Spinner</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Spinner<span class="token operator">&lt;</span>Double<span class="token operator">></span> spinner2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Spinner</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>spinner1<span class="token punctuation">.</span><span class="token function">setEditable</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>String<span class="token operator">></span> items <span class="token operator">=</span> FXCollections<span class="token punctuation">.</span><span class="token function">observableArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>items<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span><span class="token string">"A"</span><span class="token punctuation">,</span> <span class="token string">"B"</span><span class="token punctuation">,</span> <span class="token string">"C"</span><span class="token punctuation">,</span> <span class="token string">"D"</span><span class="token punctuation">,</span> <span class="token string">"E"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Spinner<span class="token operator">&lt;</span>String<span class="token operator">></span> spinner3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Spinner</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token punctuation">;</span>spinner3<span class="token punctuation">.</span><span class="token function">getStyleClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>Spinner<span class="token punctuation">.</span>STYLE_CLASS_SPLIT_ARROWS_HORIZONTAL<span class="token punctuation">)</span><span class="token punctuation">;</span>spinner1<span class="token punctuation">.</span><span class="token function">valueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Integer</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Integer oldValue<span class="token punctuation">,</span> Integer newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SpinnerValueFactory"><a href="#SpinnerValueFactory" class="headerlink" title="SpinnerValueFactory"></a>SpinnerValueFactory</h2><pre class="line-numbers language-java"><code class="language-java">Student student1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Student1"</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Student student2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Student2"</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Student student3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">"Student3"</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>Student<span class="token operator">></span> students <span class="token operator">=</span> FXCollections<span class="token punctuation">.</span><span class="token function">observableArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>students<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>student1<span class="token punctuation">,</span> student2<span class="token punctuation">,</span> student3<span class="token punctuation">)</span><span class="token punctuation">;</span>SpinnerValueFactory<span class="token operator">&lt;</span>Student<span class="token operator">></span> spinnerValueFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpinnerValueFactory<span class="token punctuation">.</span>ListSpinnerValueFactory</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>Spinner<span class="token operator">&lt;</span>Student<span class="token operator">></span> spinner4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Spinner</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>spinnerValueFactory<span class="token punctuation">.</span><span class="token function">setConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringConverter</span><span class="token operator">&lt;</span>Student<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span>Student object<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> object<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> object<span class="token punctuation">.</span>id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Student <span class="token function">fromString</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//setValueFactory 要后调用</span>spinner4<span class="token punctuation">.</span><span class="token function">setValueFactory</span><span class="token punctuation">(</span>spinnerValueFactory<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 ProgressBar&amp;ProgressIndicator</title>
      <link href="/2020/05/26/javafx-kong-jian-progressbar-progressindicator/"/>
      <url>/2020/05/26/javafx-kong-jian-progressbar-progressindicator/</url>
      
        <content type="html"><![CDATA[<h1 id="ProgressBar-amp-ProgressIndicator"><a href="#ProgressBar-amp-ProgressIndicator" class="headerlink" title="ProgressBar&amp;ProgressIndicator"></a>ProgressBar&amp;ProgressIndicator</h1><h2 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526230335.png"></p><pre class="line-numbers language-java"><code class="language-java">ProgressBar pb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProgressBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pb<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置进度</span>pb<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pb<span class="token punctuation">.</span><span class="token function">getProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置不确定进度</span>pb<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span>ProgressBar<span class="token punctuation">.</span>INDETERMINATE_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//进度监听</span>pb<span class="token punctuation">.</span><span class="token function">progressProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ProgressIndicator"><a href="#ProgressIndicator" class="headerlink" title="ProgressIndicator"></a>ProgressIndicator</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526230349.png"><br><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526230401.png"></p><pre class="line-numbers language-java"><code class="language-java">ProgressIndicator pi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProgressIndicator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pi<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pi<span class="token punctuation">.</span><span class="token function">setPrefHeight</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置进度</span>pi<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pi<span class="token punctuation">.</span><span class="token function">getProgress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置不确定进度</span>pi<span class="token punctuation">.</span><span class="token function">setProgress</span><span class="token punctuation">(</span>ProgressBar<span class="token punctuation">.</span>INDETERMINATE_PROGRESS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//进度监听</span>pi<span class="token punctuation">.</span><span class="token function">progressProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 RadioButton&amp;CheckBox</title>
      <link href="/2020/05/26/javafx-kong-jian-radiobutton-checkbox/"/>
      <url>/2020/05/26/javafx-kong-jian-radiobutton-checkbox/</url>
      
        <content type="html"><![CDATA[<h1 id="RadioButton-amp-CheckBox"><a href="#RadioButton-amp-CheckBox" class="headerlink" title="RadioButton&amp;CheckBox"></a>RadioButton&amp;CheckBox</h1><h2 id="RadioButton"><a href="#RadioButton" class="headerlink" title="RadioButton"></a>RadioButton</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526225920.png"></p><pre class="line-numbers language-java"><code class="language-java">RadioButton rb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"rb1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>RadioButton rb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"rb2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>RadioButton rb3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"rb3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>RadioButton rb4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RadioButton</span><span class="token punctuation">(</span><span class="token string">"rb4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ToggleGroup toggleGroup <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ToggleGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>toggleGroup<span class="token punctuation">.</span><span class="token function">getToggles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>rb1<span class="token punctuation">,</span> rb2<span class="token punctuation">,</span> rb3<span class="token punctuation">,</span> rb4<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置选中</span>rb2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通过ToggleGroup设置选中</span>toggleGroup<span class="token punctuation">.</span><span class="token function">selectToggle</span><span class="token punctuation">(</span>rb3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//RadioButton 监听改变</span>rb1<span class="token punctuation">.</span><span class="token function">selectedProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Boolean<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Boolean</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Boolean oldValue<span class="token punctuation">,</span> Boolean newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//ToggleGroup 监听改变</span>toggleGroup<span class="token punctuation">.</span><span class="token function">selectedToggleProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Toggle<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Toggle</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Toggle oldValue<span class="token punctuation">,</span> Toggle newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>Node<span class="token operator">></span> children <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>children<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>rb1<span class="token punctuation">,</span> rb2<span class="token punctuation">,</span> rb3<span class="token punctuation">,</span> rb4<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200526230256.png"></p><pre class="line-numbers language-java"><code class="language-java">CheckBox cb1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">"cb1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CheckBox cb2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">"cb2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CheckBox cb3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">"cb3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CheckBox cb4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CheckBox</span><span class="token punctuation">(</span><span class="token string">"cb4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置选中</span>cb2<span class="token punctuation">.</span><span class="token function">setSelected</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cb3<span class="token punctuation">.</span><span class="token function">setIndeterminate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>cb3<span class="token punctuation">.</span><span class="token function">setAllowIndeterminate</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//CheckBox 监听改变</span>cb1<span class="token punctuation">.</span><span class="token function">selectedProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Boolean<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Boolean</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Boolean oldValue<span class="token punctuation">,</span> Boolean newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObservableList<span class="token operator">&lt;</span>Node<span class="token operator">></span> children <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>children<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>cb1<span class="token punctuation">,</span> cb2<span class="token punctuation">,</span> cb3<span class="token punctuation">,</span> cb4<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 ImageView</title>
      <link href="/2020/05/25/javafx-kong-jian-imageview/"/>
      <url>/2020/05/25/javafx-kong-jian-imageview/</url>
      
        <content type="html"><![CDATA[<h1 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h1><blockquote><p>支持格式:<br>BMP GIF JPEG PNG</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//加载图片</span><span class="token comment" spellcheck="true">//如果设置了 requestedXXX 尺寸, ImageView中 设置 FitXXX 尺寸是基于requestedXXX 尺寸缩放</span>Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span>        String url<span class="token punctuation">,</span><span class="token keyword">double</span> requestedWidth<span class="token punctuation">,</span><span class="token keyword">double</span> requestedHeight<span class="token punctuation">,</span><span class="token keyword">boolean</span> preserveRatio<span class="token punctuation">,</span><span class="token keyword">boolean</span> smooth<span class="token punctuation">,</span><span class="token keyword">boolean</span> backgroundLoading<span class="token punctuation">)</span><span class="token punctuation">;</span>Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"https://pic.rmb.bdstatic.com/c86255e8028696139d3e3e4bb44c047b.png"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//显示图片</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="保持长宽比"><a href="#保持长宽比" class="headerlink" title="保持长宽比"></a>保持长宽比</h2><pre class="line-numbers language-java"><code class="language-java">ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitHeight</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取尺寸"><a href="#获取尺寸" class="headerlink" title="获取尺寸"></a>获取尺寸</h2><pre class="line-numbers language-java"><code class="language-java">Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">getFitHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//0.0</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">getFitWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//0.0</span><span class="token comment" spellcheck="true">//获取没有设置尺寸时的实际尺寸</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">prefHeight</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//391.0</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">prefWidth</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//391.0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置圆角"><a href="#设置圆角" class="headerlink" title="设置圆角"></a>设置圆角</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525212957.png"></p><pre class="line-numbers language-java"><code class="language-java">Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Rectangle rectangle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span>imageView<span class="token punctuation">.</span><span class="token function">prefWidth</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> imageView<span class="token punctuation">.</span><span class="token function">prefHeight</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rectangle<span class="token punctuation">.</span><span class="token function">setArcWidth</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rectangle<span class="token punctuation">.</span><span class="token function">setArcHeight</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setClip</span><span class="token punctuation">(</span>rectangle<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Viewport"><a href="#Viewport" class="headerlink" title="Viewport"></a>Viewport</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525213020.png"></p><pre class="line-numbers language-java"><code class="language-java">Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Rectangle2D rectangle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Rectangle2D</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setViewport</span><span class="token punctuation">(</span>rectangle<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取像素-ARGB"><a href="#获取像素-ARGB" class="headerlink" title="获取像素 ARGB"></a>获取像素 ARGB</h2><pre class="line-numbers language-java"><code class="language-java">PixelReader pixelReader <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> argb <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getArgb</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token punctuation">(</span>argb <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>argb <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token punctuation">(</span>argb <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token keyword">int</span> b <span class="token operator">=</span> argb <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PixelReader"><a href="#PixelReader" class="headerlink" title="PixelReader"></a>PixelReader</h2><pre class="line-numbers language-java"><code class="language-java">Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelReader pixelReader <span class="token operator">=</span> image<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取某个像素 ARGB</span><span class="token keyword">int</span> argb <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getArgb</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token punctuation">(</span>argb <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token keyword">int</span> r <span class="token operator">=</span> <span class="token punctuation">(</span>argb <span class="token operator">>></span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token punctuation">(</span>argb <span class="token operator">>></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token keyword">int</span> b <span class="token operator">=</span> argb <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//a = 255, r = 43, g = 43, b = 41</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"a = "</span> <span class="token operator">+</span> a <span class="token operator">+</span> <span class="token string">", r = "</span> <span class="token operator">+</span> r <span class="token operator">+</span> <span class="token string">", g = "</span> <span class="token operator">+</span> g <span class="token operator">+</span> <span class="token string">", b = "</span> <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//获取Color对象</span>Color color <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//0xe74143ff</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Label label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Label"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>label<span class="token punctuation">.</span><span class="token function">setTextFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#"</span> <span class="token operator">+</span> color<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="WritableImage"><a href="#WritableImage" class="headerlink" title="WritableImage"></a>WritableImage</h2><blockquote><p>按像素写入</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525213034.png"></p><pre class="line-numbers language-java"><code class="language-java">WritableImage writableImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelWriter pixelWriter <span class="token operator">=</span> writableImage<span class="token punctuation">.</span><span class="token function">getPixelWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        pixelWriter<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> k<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>writableImage<span class="token punctuation">)</span><span class="token punctuation">;</span>操作现有图片<span class="token operator">!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cdn<span class="token punctuation">.</span>jsdelivr<span class="token punctuation">.</span>net<span class="token operator">/</span>gh<span class="token operator">/</span>luoshuaidev<span class="token operator">/</span>luoshuaidev<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io<span class="token annotation punctuation">@image</span><span class="token operator">/</span><span class="token number">20200525213103</span><span class="token punctuation">.</span>png<span class="token punctuation">)</span>Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>WritableImage writableImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelWriter pixelWriter <span class="token operator">=</span> writableImage<span class="token punctuation">.</span><span class="token function">getPixelWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">50</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        pixelWriter<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> k<span class="token punctuation">,</span> Color<span class="token punctuation">.</span>RED<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>writableImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一张图片写入另一张图片"><a href="#一张图片写入另一张图片" class="headerlink" title="一张图片写入另一张图片"></a>一张图片写入另一张图片</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525213940.png"></p><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法 1"></a>方法 1</h3><pre class="line-numbers language-java"><code class="language-java">Image image1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image image2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image2.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>WritableImage writableImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span>image1<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelWriter pixelWriter <span class="token operator">=</span> writableImage<span class="token punctuation">.</span><span class="token function">getPixelWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelReader pixelReader <span class="token operator">=</span> image2<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">500</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">600</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Color color <span class="token operator">=</span> pixelReader<span class="token punctuation">.</span><span class="token function">getColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>        pixelWriter<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>writableImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 2"></a>方法 2</h3><pre class="line-numbers language-java"><code class="language-java">Image image1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image image2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image2.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>WritableImage writableImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span>image1<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelWriter pixelWriter <span class="token operator">=</span> writableImage<span class="token punctuation">.</span><span class="token function">getPixelWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelReader pixelReader <span class="token operator">=</span> image2<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>WritablePixelFormat<span class="token operator">&lt;</span>IntBuffer<span class="token operator">></span> pixelFormat <span class="token operator">=</span> PixelFormat<span class="token punctuation">.</span><span class="token function">getIntArgbPreInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">600</span><span class="token punctuation">]</span><span class="token punctuation">;</span>pixelReader<span class="token punctuation">.</span><span class="token function">getPixels</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> pixelFormat<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pixelWriter<span class="token punctuation">.</span><span class="token function">setPixels</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> pixelFormat<span class="token punctuation">,</span> buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>writableImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法-3"><a href="#方法-3" class="headerlink" title="方法 3"></a>方法 3</h3><pre class="line-numbers language-java"><code class="language-java">Image image1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image1.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Image image2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/image2.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>WritableImage writableImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WritableImage</span><span class="token punctuation">(</span>image1<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelWriter pixelWriter <span class="token operator">=</span> writableImage<span class="token punctuation">.</span><span class="token function">getPixelWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>PixelReader pixelReader <span class="token operator">=</span> image2<span class="token punctuation">.</span><span class="token function">getPixelReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pixelWriter<span class="token punctuation">.</span><span class="token function">setPixels</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> pixelReader<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>writableImage<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图片写入文件"><a href="#图片写入文件" class="headerlink" title="图片写入文件"></a>图片写入文件</h3><pre class="line-numbers language-java"><code class="language-java">BufferedImage bufferedImage <span class="token operator">=</span> SwingFXUtils<span class="token punctuation">.</span><span class="token function">fromFXImage</span><span class="token punctuation">(</span>writableImage<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"D:/image.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="截图-Node-snapshot"><a href="#截图-Node-snapshot" class="headerlink" title="截图 Node.snapshot()"></a>截图 Node.snapshot()</h3><pre class="line-numbers language-java"><code class="language-java">Image image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image/portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span><span class="token punctuation">;</span>WritableImage snapshot <span class="token operator">=</span> imageView<span class="token punctuation">.</span><span class="token function">snapshot</span><span class="token punctuation">(</span>null<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>BufferedImage bufferedImage <span class="token operator">=</span> SwingFXUtils<span class="token punctuation">.</span><span class="token function">fromFXImage</span><span class="token punctuation">(</span>snapshot<span class="token punctuation">,</span> null<span class="token punctuation">)</span><span class="token punctuation">;</span>ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"png"</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">"D:/image.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Button</title>
      <link href="/2020/05/25/javafx-kong-jian-button/"/>
      <url>/2020/05/25/javafx-kong-jian-button/</url>
      
        <content type="html"><![CDATA[<h1 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525212148.png"></p><pre class="line-numbers language-java"><code class="language-java">Button button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Tooltip tooltip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tooltip<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"TooltipTooltip"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tooltip<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自动换行</span>tooltip<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//省略效果</span>tooltip<span class="token punctuation">.</span><span class="token function">setTextOverrun</span><span class="token punctuation">(</span>OverrunStyle<span class="token punctuation">.</span>CENTER_ELLIPSIS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//多行对齐</span>tooltip<span class="token punctuation">.</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>TextAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//出现位置</span>tooltip<span class="token punctuation">.</span><span class="token function">setAnchorLocation</span><span class="token punctuation">(</span>AnchorLocation<span class="token punctuation">.</span>CONTENT_TOP_RIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setTooltip</span><span class="token punctuation">(</span>tooltip<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h2><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525212209.png"></p><pre class="line-numbers language-java"><code class="language-java">Button button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Tooltip tooltip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>VBox vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Label label1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Label1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>label1<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Label label2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Label2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>label2<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>vBox<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>label1<span class="token punctuation">,</span> label2<span class="token punctuation">)</span><span class="token punctuation">;</span>tooltip<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span>vBox<span class="token punctuation">)</span><span class="token punctuation">;</span>vBox<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #0c8;-fx-padding: 20"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//去除黑边</span>tooltip<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: transparent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>button<span class="token punctuation">.</span><span class="token function">setTooltip</span><span class="token punctuation">(</span>tooltip<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 TextArea</title>
      <link href="/2020/05/25/javafx-kong-jian-textarea/"/>
      <url>/2020/05/25/javafx-kong-jian-textarea/</url>
      
        <content type="html"><![CDATA[<h1 id="TextArea"><a href="#TextArea" class="headerlink" title="TextArea"></a>TextArea</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200525212318.png"></p><pre class="line-numbers language-java"><code class="language-java">TextArea textArea <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textArea<span class="token punctuation">.</span><span class="token function">setPrefColumnCount</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textArea<span class="token punctuation">.</span><span class="token function">setPrefRowCount</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textArea<span class="token punctuation">.</span><span class="token function">setPromptText</span><span class="token punctuation">(</span><span class="token string">"PromptText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//自动换行</span>textArea<span class="token punctuation">.</span><span class="token function">setWrapText</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textArea<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"setText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//setText</span>textArea<span class="token punctuation">.</span><span class="token function">appendText</span><span class="token punctuation">(</span><span class="token string">"appendText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//setTextappendText</span>textArea<span class="token punctuation">.</span><span class="token function">insertText</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">"|"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//setText|appendText</span>textArea<span class="token punctuation">.</span><span class="token function">deleteText</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//set|appendText</span>textArea<span class="token punctuation">.</span><span class="token function">replaceText</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"SET"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//SET|appendText</span><span class="token comment" spellcheck="true">//移动光标</span>textArea<span class="token punctuation">.</span><span class="token function">positionCaret</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textArea<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//输入监听</span>textArea<span class="token punctuation">.</span><span class="token function">textProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//选中监听</span>textArea<span class="token punctuation">.</span><span class="token function">selectedTextProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//滚动监听</span>textArea<span class="token punctuation">.</span><span class="token function">scrollTopProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TextFormatter"><a href="#TextFormatter" class="headerlink" title="TextFormatter"></a>TextFormatter</h2><pre class="line-numbers language-java"><code class="language-java">TextField textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//限制输入字母和数字</span>textField<span class="token punctuation">.</span><span class="token function">setTextFormatter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TextFormatter</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UnaryOperator</span><span class="token operator">&lt;</span>Change<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> Change <span class="token function">apply</span><span class="token punctuation">(</span>Change change<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>change<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">"[0-9a-zA-Z]"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> change<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 控件 Label Text TextField PasswordField</title>
      <link href="/2020/05/25/javafx-kong-jian-label-text-textfield-passwordfield/"/>
      <url>/2020/05/25/javafx-kong-jian-label-text-textfield-passwordfield/</url>
      
        <content type="html"><![CDATA[<h1 id="Label-Text-TextField-PasswordField"><a href="#Label-Text-TextField-PasswordField" class="headerlink" title="Label Text TextField PasswordField"></a>Label Text TextField PasswordField</h1><h2 id="Label"><a href="#Label" class="headerlink" title="Label"></a>Label</h2><pre class="line-numbers language-java"><code class="language-java">Label label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>label<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"Label"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>label<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//颜色</span>label<span class="token punctuation">.</span><span class="token function">setTextFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#088"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//获取安装的字体</span>Font<span class="token punctuation">.</span><span class="token function">getFamilies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Text text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//颜色</span>text<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#ccc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//描边颜色</span>text<span class="token punctuation">.</span><span class="token function">setStroke</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#0ac"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//描边宽度</span>text<span class="token punctuation">.</span><span class="token function">setStrokeWidth</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//描边类型</span>text<span class="token punctuation">.</span><span class="token function">setStrokeType</span><span class="token punctuation">(</span>StrokeType<span class="token punctuation">.</span>OUTSIDE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//下划线</span>text<span class="token punctuation">.</span><span class="token function">setUnderline</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//中划线</span>text<span class="token punctuation">.</span><span class="token function">setStrikethrough</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//平滑</span>text<span class="token punctuation">.</span><span class="token function">setSmooth</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>text<span class="token punctuation">.</span><span class="token function">setFontSmoothingType</span><span class="token punctuation">(</span>FontSmoothingType<span class="token punctuation">.</span>LCD<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TextField"><a href="#TextField" class="headerlink" title="TextField"></a>TextField</h2><pre class="line-numbers language-java"><code class="language-java">TextField textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"TextField"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textField<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//悬停提示</span>Tooltip tooltip <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tooltip</span><span class="token punctuation">(</span><span class="token string">"请输入XXX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textField<span class="token punctuation">.</span><span class="token function">setTooltip</span><span class="token punctuation">(</span>tooltip<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//占位符</span>textField<span class="token punctuation">.</span><span class="token function">setPromptText</span><span class="token punctuation">(</span><span class="token string">"请输入XXX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="监听输入"><a href="#监听输入" class="headerlink" title="监听输入"></a>监听输入</h3><pre class="line-numbers language-java"><code class="language-java">textField<span class="token punctuation">.</span><span class="token function">textProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>newValue<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            textField<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="监听选择"><a href="#监听选择" class="headerlink" title="监听选择"></a>监听选择</h3><pre class="line-numbers language-java"><code class="language-java">textField<span class="token punctuation">.</span><span class="token function">selectedTextProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">String</span><span class="token operator">></span> observable<span class="token punctuation">,</span> String oldValue<span class="token punctuation">,</span> String newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="PasswordField"><a href="#PasswordField" class="headerlink" title="PasswordField"></a>PasswordField</h2><pre class="line-numbers language-java"><code class="language-java">PasswordField passwordField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PasswordField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 TabPane&amp;Tab</title>
      <link href="/2020/05/24/javafx-bu-ju-tabpane-tab/"/>
      <url>/2020/05/24/javafx-bu-ju-tabpane-tab/</url>
      
        <content type="html"><![CDATA[<h1 id="TabPane-amp-Tab"><a href="#TabPane-amp-Tab" class="headerlink" title="TabPane&amp;Tab"></a>TabPane&amp;Tab</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524220217.png"></p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524220228.png"></p><pre class="line-numbers language-java"><code class="language-java">TabPane tabPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TabPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tabPane<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tabPane<span class="token punctuation">.</span><span class="token function">setPrefHeight</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tabPane<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #0ac"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Tab tab1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tab</span><span class="token punctuation">(</span><span class="token string">"Tab1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Tab tab2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tab</span><span class="token punctuation">(</span><span class="token string">"Tab2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Tab tab3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tab</span><span class="token punctuation">(</span><span class="token string">"Tab3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab1<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\stash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//关闭监听</span>tab1<span class="token punctuation">.</span><span class="token function">setOnClosed</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"tab1.setOnClosed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab1<span class="token punctuation">.</span><span class="token function">setOnCloseRequest</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//阻止事件, setOnClosed 不会执行</span>        event<span class="token punctuation">.</span><span class="token function">consume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"tab1.setOnCloseRequest"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab1<span class="token punctuation">.</span><span class="token function">setOnSelectionChanged</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>Event<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>Event event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"tab1.setOnSelectionChanged"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//不允许关闭</span>tab2<span class="token punctuation">.</span><span class="token function">setClosable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab1<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Tab1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab2<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Tab2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tab3<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Tab3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//默认选中</span>tabPane<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>tab2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置关闭按钮显示模式</span>tabPane<span class="token punctuation">.</span><span class="token function">setTabClosingPolicy</span><span class="token punctuation">(</span>TabClosingPolicy<span class="token punctuation">.</span>ALL_TABS<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置Tab方位</span>tabPane<span class="token punctuation">.</span><span class="token function">setSide</span><span class="token punctuation">(</span>Side<span class="token punctuation">.</span>LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//旋转图标</span>tabPane<span class="token punctuation">.</span><span class="token function">setRotateGraphic</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tabPane<span class="token punctuation">.</span><span class="token function">getTabs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>tab1<span class="token punctuation">,</span> tab2<span class="token punctuation">,</span> tab3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//监听Tab切换</span>tabPane<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedIndexProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"tabPane.selectedIndexProperty()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//监听Tab切换</span>tabPane<span class="token punctuation">.</span><span class="token function">getSelectionModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">selectedItemProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Tab<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Tab</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Tab oldValue<span class="token punctuation">,</span> Tab newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"tabPane.selectedItemProperty()"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 ScrollPane</title>
      <link href="/2020/05/24/javafx-bu-ju-scrollpane/"/>
      <url>/2020/05/24/javafx-bu-ju-scrollpane/</url>
      
        <content type="html"><![CDATA[<h1 id="ScrollPane"><a href="#ScrollPane" class="headerlink" title="ScrollPane"></a>ScrollPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524220054.png"></p><pre class="line-numbers language-java"><code class="language-java">StackPane stackPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #0cc; -fx-background-insets: 200"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stackPane<span class="token punctuation">.</span><span class="token function">setPrefHeight</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ScrollPane scrollPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ScrollPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setMaxWidth</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setMaxHeight</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>stackPane<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//是否可以用鼠标移动</span>scrollPane<span class="token punctuation">.</span><span class="token function">setPannable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//滚动条显示策略</span>scrollPane<span class="token punctuation">.</span><span class="token function">setHbarPolicy</span><span class="token punctuation">(</span>ScrollBarPolicy<span class="token punctuation">.</span>ALWAYS<span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setVbarPolicy</span><span class="token punctuation">(</span>ScrollBarPolicy<span class="token punctuation">.</span>AS_NEEDED<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//范围和设置值</span>scrollPane<span class="token punctuation">.</span><span class="token function">setHmin</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setHmax</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setHvalue</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setVmin</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setVmax</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">setVvalue</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//滚动监听</span>scrollPane<span class="token punctuation">.</span><span class="token function">hvalueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>scrollPane<span class="token punctuation">.</span><span class="token function">vvalueProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Number<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Number</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Number oldValue<span class="token punctuation">,</span> Number newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 TitledPane</title>
      <link href="/2020/05/24/javafx-bu-ju-titledpane/"/>
      <url>/2020/05/24/javafx-bu-ju-titledpane/</url>
      
        <content type="html"><![CDATA[<h1 id="TitledPane"><a href="#TitledPane" class="headerlink" title="TitledPane"></a>TitledPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524215950.png"></p><pre class="line-numbers language-java"><code class="language-java">VBox vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button2"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>TitledPane titledPane1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TitledPane</span><span class="token punctuation">(</span><span class="token string">"TitledPane1"</span><span class="token punctuation">,</span> vBox<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//图标方位</span>titledPane1<span class="token punctuation">.</span><span class="token function">setNodeOrientation</span><span class="token punctuation">(</span>NodeOrientation<span class="token punctuation">.</span>RIGHT_TO_LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span>VBox vBox2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button4"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button5"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button6"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>TitledPane titledPane2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TitledPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>titledPane2<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"TitledPane2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>titledPane2<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>vBox2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//默认是否展开</span>titledPane2<span class="token punctuation">.</span><span class="token function">setExpanded</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//禁用动画</span>titledPane2<span class="token punctuation">.</span><span class="token function">setAnimated</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//禁用点击展开收起</span>titledPane2<span class="token punctuation">.</span><span class="token function">setCollapsible</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//设置图标</span>titledPane2<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\stash.png"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//展开收起监听</span>titledPane2<span class="token punctuation">.</span><span class="token function">expandedProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>Boolean<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Boolean</span><span class="token operator">></span> observable<span class="token punctuation">,</span> Boolean oldValue<span class="token punctuation">,</span> Boolean newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Accordion"><a href="#Accordion" class="headerlink" title="Accordion"></a>Accordion</h2><blockquote><p>TitledPane 组, 组中只有一个可以展开</p></blockquote><pre class="line-numbers language-java"><code class="language-java">Accordion accordion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Accordion</span><span class="token punctuation">(</span>titledPane1<span class="token punctuation">,</span> titledPane2<span class="token punctuation">)</span><span class="token punctuation">;</span>accordion<span class="token punctuation">.</span><span class="token function">expandedPaneProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ChangeListener</span><span class="token operator">&lt;</span>TitledPane<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changed</span><span class="token punctuation">(</span>ObservableValue<span class="token operator">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">TitledPane</span><span class="token operator">></span> observable<span class="token punctuation">,</span> TitledPane oldValue<span class="token punctuation">,</span> TitledPane newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"observable = "</span> <span class="token operator">+</span> observable <span class="token operator">+</span> <span class="token string">", oldValue = "</span> <span class="token operator">+</span> oldValue <span class="token operator">+</span> <span class="token string">", newValue = "</span> <span class="token operator">+</span> newValue<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 TextFlow</title>
      <link href="/2020/05/24/javafx-bu-ju-textflow/"/>
      <url>/2020/05/24/javafx-bu-ju-textflow/</url>
      
        <content type="html"><![CDATA[<h1 id="TextFlow"><a href="#TextFlow" class="headerlink" title="TextFlow"></a>TextFlow</h1><blockquote><p>子文本控件(Text)自动换行</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524215750.png"></p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524215802.png"></p><pre class="line-numbers language-java"><code class="language-java">TextFlow textFlow1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Text text1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Text1Text1Text1Text1Text1Text1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Text text2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"Text2Text2Text2Text2Text2Text2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>textFlow1<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>text1<span class="token punctuation">,</span> text2<span class="token punctuation">)</span><span class="token punctuation">;</span>textFlow1<span class="token punctuation">.</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>TextAlignment<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>textFlow1<span class="token punctuation">.</span><span class="token function">setLineSpacing</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 DialogPane</title>
      <link href="/2020/05/24/javafx-bu-ju-dialogpane/"/>
      <url>/2020/05/24/javafx-bu-ju-dialogpane/</url>
      
        <content type="html"><![CDATA[<h1 id="DialogPane"><a href="#DialogPane" class="headerlink" title="DialogPane"></a>DialogPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200524215641.png"></p><pre class="line-numbers language-java"><code class="language-java">Stage stage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>DialogPane dialogPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DialogPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">setHeaderText</span><span class="token punctuation">(</span><span class="token string">"HeaderText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">setContentText</span><span class="token punctuation">(</span><span class="token string">"ContentText"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ImageView imageView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImageView</span><span class="token punctuation">(</span><span class="token string">"image\\portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setFitWidth</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>imageView<span class="token punctuation">.</span><span class="token function">setPreserveRatio</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">setGraphic</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span><span class="token punctuation">;</span>Text text1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"ExpandableContentExpandableContent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Text text2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string">"ExpandableContentExpandableContent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>text1<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#ccc"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>text1<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>VBox vBox <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span>text1<span class="token punctuation">,</span> text2<span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">setExpandableContent</span><span class="token punctuation">(</span>vBox<span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">setExpanded</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dialogPane<span class="token punctuation">.</span><span class="token function">getButtonTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">,</span> ButtonType<span class="token punctuation">.</span>APPLY<span class="token punctuation">,</span> ButtonType<span class="token punctuation">.</span>CANCEL<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnOk <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> dialogPane<span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>OK<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnApply <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> dialogPane<span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>APPLY<span class="token punctuation">)</span><span class="token punctuation">;</span>Button btnCancel <span class="token operator">=</span> <span class="token punctuation">(</span>Button<span class="token punctuation">)</span> dialogPane<span class="token punctuation">.</span><span class="token function">lookupButton</span><span class="token punctuation">(</span>ButtonType<span class="token punctuation">.</span>CANCEL<span class="token punctuation">)</span><span class="token punctuation">;</span>btnOk<span class="token punctuation">.</span><span class="token function">setOnAction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">EventHandler</span><span class="token operator">&lt;</span>ActionEvent<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span>ActionEvent event<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        stage<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">initOwner</span><span class="token punctuation">(</span>primaryStage<span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">initModality</span><span class="token punctuation">(</span>Modality<span class="token punctuation">.</span>WINDOW_MODAL<span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">setResizable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>dialogPane<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 TilePane</title>
      <link href="/2020/05/23/javafx-bu-ju-tilepane/"/>
      <url>/2020/05/23/javafx-bu-ju-tilepane/</url>
      
        <content type="html"><![CDATA[<h1 id="TilePane"><a href="#TilePane" class="headerlink" title="TilePane"></a>TilePane</h1><blockquote><p>子组件会保持同样大小</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523130334.png"></p><pre class="line-numbers language-java"><code class="language-java">TilePane root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TilePane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>CENTER_LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>Orientation<span class="token punctuation">.</span>HORIZONTAL<span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setTileAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>TOP_LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    StackPane stackPane <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    stackPane<span class="token punctuation">.</span><span class="token function">setPrefWidth</span><span class="token punctuation">(</span><span class="token number">80</span> <span class="token operator">-</span> <span class="token number">10</span> <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    stackPane<span class="token punctuation">.</span><span class="token function">setPrefHeight</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    stackPane<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">"-fx-background-color: #088"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>stackPane<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 StackPane</title>
      <link href="/2020/05/23/javafx-bu-ju-stackpane/"/>
      <url>/2020/05/23/javafx-bu-ju-stackpane/</url>
      
        <content type="html"><![CDATA[<h1 id="StackPane"><a href="#StackPane" class="headerlink" title="StackPane"></a>StackPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523114055.png"></p><blockquote><p>类似于 FrameLayout</p></blockquote><pre class="line-numbers language-java"><code class="language-java">StackPane root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StackPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>StackPane<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>button1<span class="token punctuation">,</span> Pos<span class="token punctuation">.</span>TOP_LEFT<span class="token punctuation">)</span><span class="token punctuation">;</span>StackPane<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>button2<span class="token punctuation">,</span> Pos<span class="token punctuation">.</span>TOP_RIGHT<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 FlowPane</title>
      <link href="/2020/05/23/javafx-bu-ju-flowpane/"/>
      <url>/2020/05/23/javafx-bu-ju-flowpane/</url>
      
        <content type="html"><![CDATA[<p>FlowPane</p><p>水平</p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523113850.png"></p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523113903.png"></p><p>垂直</p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523113952.png"></p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523114004.png"></p><pre class="line-numbers language-java"><code class="language-java">FlowPane root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FlowPane</span><span class="token punctuation">(</span>Orientation<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setHgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setVgap</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>TOP_CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setOrientation</span><span class="token punctuation">(</span>Orientation<span class="token punctuation">.</span>VERTICAL<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 GridPane</title>
      <link href="/2020/05/23/javafx-bu-ju-gridpane/"/>
      <url>/2020/05/23/javafx-bu-ju-gridpane/</url>
      
        <content type="html"><![CDATA[<h1 id="GridPane"><a href="#GridPane" class="headerlink" title="GridPane"></a>GridPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523113541.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 BorderPane</title>
      <link href="/2020/05/23/javafx-bu-ju-borderpane/"/>
      <url>/2020/05/23/javafx-bu-ju-borderpane/</url>
      
        <content type="html"><![CDATA[<h1 id="BorderPane"><a href="#BorderPane" class="headerlink" title="BorderPane"></a>BorderPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200523113747.png"></p><h2 id="Center-会扩展剩余空间"><a href="#Center-会扩展剩余空间" class="headerlink" title="Center 会扩展剩余空间"></a><strong>Center 会扩展剩余空间</strong></h2><pre class="line-numbers language-java"><code class="language-java">BorderPane root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BorderPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Top"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setLeft</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Left"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setRight</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Right"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Bottom"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string">"Center"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 HBox VBox</title>
      <link href="/2020/05/22/javafx-bu-ju-hbox-vbox/"/>
      <url>/2020/05/22/javafx-bu-ju-hbox-vbox/</url>
      
        <content type="html"><![CDATA[<h1 id="HBox-VBox"><a href="#HBox-VBox" class="headerlink" title="HBox VBox"></a>HBox VBox</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200522002425.png"></p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200522002442.png"></p><h1 id="HBox"><a href="#HBox" class="headerlink" title="HBox"></a>HBox</h1><pre class="line-numbers language-java"><code class="language-java">HBox root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="VBox"><a href="#VBox" class="headerlink" title="VBox"></a>VBox</h2><pre class="line-numbers language-java"><code class="language-java">VBox root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>root<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>Pos<span class="token punctuation">.</span>CENTER<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 布局 AnchorPane</title>
      <link href="/2020/05/22/javafx-bu-ju-anchorpane/"/>
      <url>/2020/05/22/javafx-bu-ju-anchorpane/</url>
      
        <content type="html"><![CDATA[<h1 id="AnchorPane"><a href="#AnchorPane" class="headerlink" title="AnchorPane"></a>AnchorPane</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200522002116.png"></p><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200522002159.png"></p><pre class="line-numbers language-java"><code class="language-java">AnchorPane root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnchorPane</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>AnchorPane<span class="token punctuation">.</span><span class="token function">setTopAnchor</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token number">30.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>AnchorPane<span class="token punctuation">.</span><span class="token function">setLeftAnchor</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token number">30.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>AnchorPane<span class="token punctuation">.</span><span class="token function">setRightAnchor</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token number">30.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>AnchorPane<span class="token punctuation">.</span><span class="token function">setBottomAnchor</span><span class="token punctuation">(</span>button<span class="token punctuation">,</span> <span class="token number">30.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX基础页面</title>
      <link href="/2020/05/20/ji-chu-ye-mian/"/>
      <url>/2020/05/20/ji-chu-ye-mian/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaFX基础页面"><a href="#JavaFX基础页面" class="headerlink" title="JavaFX基础页面"></a>JavaFX基础页面</h1><p><img src="https://cdn.jsdelivr.net/gh/luoshuaidev/luoshuaidev.github.io@image/20200520235900.png"></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>application<span class="token punctuation">.</span>Application<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span>Insets<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>Scene<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span>Button<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span>Label<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>control<span class="token punctuation">.</span>TextField<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>image<span class="token punctuation">.</span>Image<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>VBox<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>paint<span class="token punctuation">.</span>Paint<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>text<span class="token punctuation">.</span>Font<span class="token punctuation">;</span><span class="token keyword">import</span> javafx<span class="token punctuation">.</span>stage<span class="token punctuation">.</span>Stage<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JavaFXApp</span> <span class="token keyword">extends</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">launch</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">start</span><span class="token punctuation">(</span>Stage primaryStage<span class="token punctuation">)</span> <span class="token punctuation">{</span>        VBox root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VBox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        root<span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Insets</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        root<span class="token punctuation">.</span><span class="token function">setSpacing</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Label label <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">"Label"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>Font<span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token string">"Roboto"</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        label<span class="token punctuation">.</span><span class="token function">setTextFill</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"#088"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        TextField textField <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        textField<span class="token punctuation">.</span><span class="token function">setPromptText</span><span class="token punctuation">(</span><span class="token string">"请输入XXX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Button button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string">"Button"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        root<span class="token punctuation">.</span><span class="token function">getChildren</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>label<span class="token punctuation">,</span> textField<span class="token punctuation">,</span> button<span class="token punctuation">)</span><span class="token punctuation">;</span>        Scene scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scene</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>        primaryStage<span class="token punctuation">.</span><span class="token function">setScene</span><span class="token punctuation">(</span>scene<span class="token punctuation">)</span><span class="token punctuation">;</span>        primaryStage<span class="token punctuation">.</span><span class="token function">setTitle</span><span class="token punctuation">(</span><span class="token string">"JavaFX"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        primaryStage<span class="token punctuation">.</span><span class="token function">getIcons</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string">"image\\portrait.jpg"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        primaryStage<span class="token punctuation">.</span><span class="token function">setWidth</span><span class="token punctuation">(</span><span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        primaryStage<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        primaryStage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaFX 学习</title>
      <link href="/2020/05/20/javafx/"/>
      <url>/2020/05/20/javafx/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaFX"><a href="#JavaFX" class="headerlink" title="JavaFX"></a>JavaFX</h1><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><p>官方文档<br><a href="https://docs.oracle.com/javase/8/javase-clienttechnologies.htm">https://docs.oracle.com/javase/8/javase-clienttechnologies.htm</a></p><p>JavaDoc<br><a href="https://docs.oracle.com/javafx/2/api/index.html">https://docs.oracle.com/javafx/2/api/index.html</a></p><p>OpenJFX<br><a href="https://openjfx.cn/">https://openjfx.cn/</a></p><p>Css<br><a href="https://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html">https://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html</a></p><p>JavaFx11<br><a href="https://gluonhq.com/products/javafx/">https://gluonhq.com/products/javafx/</a></p><h2 id="Scene-Builder"><a href="#Scene-Builder" class="headerlink" title="Scene Builder"></a>Scene Builder</h2><p><a href="https://www.oracle.com/java/technologies/javafxscenebuilder-1x-archive-downloads.html">https://www.oracle.com/java/technologies/javafxscenebuilder-1x-archive-downloads.html</a></p><p><a href="https://download.oracle.com/otn-pub/java/javafx_scenebuilder/2.0-b20/javafx_scenebuilder-2_0-windows.msi">https://download.oracle.com/otn-pub/java/javafx_scenebuilder/2.0-b20/javafx_scenebuilder-2_0-windows.msi</a></p><h2 id="中文教程"><a href="#中文教程" class="headerlink" title="中文教程"></a>中文教程</h2><p><a href="https://space.bilibili.com/5096022/channel/detail?cid=16953">https://space.bilibili.com/5096022/channel/detail?cid=16953</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> JavaFX </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
